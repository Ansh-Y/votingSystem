{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\voting-system\\\\src\\\\components\\\\VoterDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { pollsAPI } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoterDashboard = () => {\n  _s();\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const [ongoingPolls, setOngoingPolls] = useState([]);\n  const [pastPolls, setPastPolls] = useState([]);\n  const [selectedPoll, setSelectedPoll] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"ongoing\");\n\n  // Fetch polls on component mount\n  useEffect(() => {\n    fetchPolls();\n  }, []);\n\n  // Fetch ongoing and past polls\n  const fetchPolls = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      // Fetch ongoing polls\n      const ongoingResponse = await pollsAPI.getOngoingPolls();\n      setOngoingPolls(ongoingResponse.data);\n\n      // Fetch past polls\n      const pastResponse = await pollsAPI.getPastPolls();\n      setPastPolls(pastResponse.data);\n    } catch (err) {\n      console.error(\"Error fetching polls:\", err);\n      setError(\"Failed to load polls. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load poll details\n  const loadPollDetails = async pollId => {\n    try {\n      setLoading(true);\n      setSelectedOption(null);\n      setError(\"\");\n      const response = await pollsAPI.getPollDetails(pollId);\n      setSelectedPoll(response.data);\n    } catch (err) {\n      console.error(\"Error loading poll details:\", err);\n      setError(\"Failed to load poll details\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle vote submission\n  const handleVote = async () => {\n    if (!selectedPoll || !selectedOption) {\n      setError(\"Please select an option to vote\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(\"\");\n      await pollsAPI.vote(selectedPoll.id, selectedOption);\n      setSuccessMessage(\"Your vote has been recorded successfully!\");\n\n      // Refresh poll details to update the hasVoted status\n      await loadPollDetails(selectedPoll.id);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage(\"\");\n      }, 3000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Error submitting vote:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Failed to submit your vote\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Go back to polls list\n  const handleBackToPollsList = () => {\n    setSelectedPoll(null);\n    setSelectedOption(null);\n  };\n\n  // View poll results\n  const viewPollResults = async pollId => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      const response = await pollsAPI.getResults(pollId);\n      console.log(\"Poll results:\", response.data);\n      loadPollDetails(pollId);\n    } catch (err) {\n      console.error(\"Error fetching poll results:\", err);\n      setError(\"Failed to load poll results\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const viewPoll = pollId => {\n    navigate(`/polls/${pollId}`);\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Calculate time remaining for a poll\n  const getTimeRemaining = endDate => {\n    const total = Date.parse(endDate) - Date.parse(new Date());\n    if (total <= 0) return 'Ended';\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / (1000 * 60 * 60) % 24);\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    if (days > 0) return `${days} day${days !== 1 ? 's' : ''} remaining`;\n    if (hours > 0) return `${hours} hour${hours !== 1 ? 's' : ''} remaining`;\n    if (minutes > 0) return `${minutes} minute${minutes !== 1 ? 's' : ''} remaining`;\n    return `${seconds} second${seconds !== 1 ? 's' : ''} remaining`;\n  };\n  const renderPolls = () => {\n    const polls = activeTab === \"ongoing\" ? ongoingPolls : pastPolls;\n    if (loading && polls.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading polls...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 14\n      }, this);\n    }\n    if (polls.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"No \", activeTab, \" polls found.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [activeTab === \"ongoing\" ? \"Ongoing\" : \"Past\", \" Polls\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `poll-item ${poll.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: poll.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"poll-description\",\n            children: poll.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-question\",\n            children: poll.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-dates\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Start: \", formatDate(poll.start_date)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"End: \", formatDate(poll.end_date)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), activeTab === \"ongoing\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: getTimeRemaining(poll.end_date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), poll.vote_count !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vote-count\",\n            children: [poll.vote_count, \" vote\", poll.vote_count !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), poll.hasVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"badge-voted\",\n            children: \"Voted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-actions\",\n          children: activeTab === \"ongoing\" && !poll.hasVoted ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"vote-btn\",\n            onClick: () => viewPoll(poll.id),\n            children: \"Vote Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-results-btn\",\n            onClick: () => viewPoll(poll.id),\n            children: [\"View \", poll.hasVoted ? \"Results\" : \"Details\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, poll.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voter-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Voter Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", currentUser.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 26\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }, this), !loading && !selectedPoll && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"polls-tabs\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTab === \"ongoing\" ? \"active\" : \"\",\n            onClick: () => setActiveTab(\"ongoing\"),\n            children: \"Ongoing Polls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTab === \"past\" ? \"active\" : \"\",\n            onClick: () => setActiveTab(\"past\"),\n            children: \"Past Polls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), renderPolls()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), !loading && selectedPoll && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackToPollsList,\n        className: \"back-btn\",\n        children: \"\\u2190 Back to Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedPoll.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"poll-description\",\n        children: selectedPoll.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-question-box\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: selectedPoll.question || \"Please cast your vote:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), selectedPoll.hasVoted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"already-voted\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have already voted in this poll.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => viewPollResults(selectedPoll.id),\n          className: \"view-results-btn\",\n          children: \"View Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voting-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-list\",\n          children: selectedPoll.options && selectedPoll.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `option-item ${selectedOption === option.id ? 'selected' : ''}`,\n            onClick: () => setSelectedOption(option.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-info\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: option.option_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-selector\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"option\",\n                checked: selectedOption === option.id,\n                onChange: () => setSelectedOption(option.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 21\n            }, this)]\n          }, option.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVote,\n          className: \"vote-btn\",\n          disabled: loading || !selectedOption,\n          children: loading ? \"Processing...\" : \"Submit Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this), selectedPoll.hasVoted && selectedPoll.options && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Current Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-list\",\n          children: selectedPoll.options.map(option => {\n            const votePercentage = selectedPoll.vote_count > 0 ? option.votes / selectedPoll.vote_count * 100 : 0;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-text\",\n                  children: option.option_text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"vote-bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"vote-progress\",\n                    style: {\n                      width: `${votePercentage}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"vote-stats\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [option.votes, \" votes\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [votePercentage.toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 23\n              }, this)\n            }, option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(VoterDashboard, \"mYTQmhtVyF8vnSSYvF8r5Btz+SY=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = VoterDashboard;\nexport default VoterDashboard;\nvar _c;\n$RefreshReg$(_c, \"VoterDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","pollsAPI","jsxDEV","_jsxDEV","VoterDashboard","_s","currentUser","logout","navigate","ongoingPolls","setOngoingPolls","pastPolls","setPastPolls","selectedPoll","setSelectedPoll","selectedOption","setSelectedOption","loading","setLoading","error","setError","successMessage","setSuccessMessage","activeTab","setActiveTab","fetchPolls","ongoingResponse","getOngoingPolls","data","pastResponse","getPastPolls","err","console","loadPollDetails","pollId","response","getPollDetails","handleVote","vote","id","setTimeout","_err$response","_err$response$data","handleBackToPollsList","viewPollResults","getResults","log","viewPoll","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","getTimeRemaining","endDate","total","parse","seconds","Math","floor","minutes","hours","days","renderPolls","polls","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","poll","status","title","description","question","start_date","end_date","vote_count","hasVoted","onClick","name","option","option_text","type","checked","onChange","disabled","votePercentage","votes","style","width","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/voting-system/src/components/VoterDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { pollsAPI } from \"../services/api\";\r\n\r\nconst VoterDashboard = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [ongoingPolls, setOngoingPolls] = useState([]);\r\n  const [pastPolls, setPastPolls] = useState([]);\r\n  const [selectedPoll, setSelectedPoll] = useState(null);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [activeTab, setActiveTab] = useState(\"ongoing\");\r\n\r\n  // Fetch polls on component mount\r\n  useEffect(() => {\r\n    fetchPolls();\r\n  }, []);\r\n\r\n  // Fetch ongoing and past polls\r\n  const fetchPolls = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      \r\n      // Fetch ongoing polls\r\n      const ongoingResponse = await pollsAPI.getOngoingPolls();\r\n      setOngoingPolls(ongoingResponse.data);\r\n      \r\n      // Fetch past polls\r\n      const pastResponse = await pollsAPI.getPastPolls();\r\n      setPastPolls(pastResponse.data);\r\n      \r\n    } catch (err) {\r\n      console.error(\"Error fetching polls:\", err);\r\n      setError(\"Failed to load polls. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Load poll details\r\n  const loadPollDetails = async (pollId) => {\r\n    try {\r\n      setLoading(true);\r\n      setSelectedOption(null);\r\n      setError(\"\");\r\n      const response = await pollsAPI.getPollDetails(pollId);\r\n      setSelectedPoll(response.data);\r\n    } catch (err) {\r\n      console.error(\"Error loading poll details:\", err);\r\n      setError(\"Failed to load poll details\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle vote submission\r\n  const handleVote = async () => {\r\n    if (!selectedPoll || !selectedOption) {\r\n      setError(\"Please select an option to vote\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      await pollsAPI.vote(selectedPoll.id, selectedOption);\r\n      \r\n      setSuccessMessage(\"Your vote has been recorded successfully!\");\r\n      \r\n      // Refresh poll details to update the hasVoted status\r\n      await loadPollDetails(selectedPoll.id);\r\n      \r\n      // Clear success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSuccessMessage(\"\");\r\n      }, 3000);\r\n    } catch (err) {\r\n      console.error(\"Error submitting vote:\", err);\r\n      setError(err.response?.data?.error || \"Failed to submit your vote\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Go back to polls list\r\n  const handleBackToPollsList = () => {\r\n    setSelectedPoll(null);\r\n    setSelectedOption(null);\r\n  };\r\n\r\n  // View poll results\r\n  const viewPollResults = async (pollId) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      const response = await pollsAPI.getResults(pollId);\r\n      console.log(\"Poll results:\", response.data);\r\n      loadPollDetails(pollId);\r\n    } catch (err) {\r\n      console.error(\"Error fetching poll results:\", err);\r\n      setError(\"Failed to load poll results\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const viewPoll = (pollId) => {\r\n    navigate(`/polls/${pollId}`);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { \r\n      year: 'numeric', \r\n      month: 'short', \r\n      day: 'numeric',\r\n      hour: '2-digit', \r\n      minute: '2-digit'\r\n    };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  // Calculate time remaining for a poll\r\n  const getTimeRemaining = (endDate) => {\r\n    const total = Date.parse(endDate) - Date.parse(new Date());\r\n    if (total <= 0) return 'Ended';\r\n    \r\n    const seconds = Math.floor((total / 1000) % 60);\r\n    const minutes = Math.floor((total / 1000 / 60) % 60);\r\n    const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\r\n    \r\n    if (days > 0) return `${days} day${days !== 1 ? 's' : ''} remaining`;\r\n    if (hours > 0) return `${hours} hour${hours !== 1 ? 's' : ''} remaining`;\r\n    if (minutes > 0) return `${minutes} minute${minutes !== 1 ? 's' : ''} remaining`;\r\n    return `${seconds} second${seconds !== 1 ? 's' : ''} remaining`;\r\n  };\r\n\r\n  const renderPolls = () => {\r\n    const polls = activeTab === \"ongoing\" ? ongoingPolls : pastPolls;\r\n    \r\n    if (loading && polls.length === 0) {\r\n      return <div className=\"loading\">Loading polls...</div>;\r\n    }\r\n    \r\n    if (polls.length === 0) {\r\n      return <div>No {activeTab} polls found.</div>;\r\n    }\r\n    \r\n    return (\r\n      <div className=\"polls-list\">\r\n        <h3>{activeTab === \"ongoing\" ? \"Ongoing\" : \"Past\"} Polls</h3>\r\n        {polls.map(poll => (\r\n          <div key={poll.id} className={`poll-item ${poll.status}`}>\r\n            <div className=\"poll-info\">\r\n              <h4>{poll.title}</h4>\r\n              <p className=\"poll-description\">{poll.description}</p>\r\n              <div className=\"poll-question\">{poll.question}</div>\r\n              <div className=\"poll-dates\">\r\n                <span>Start: {formatDate(poll.start_date)}</span>\r\n                <span>End: {formatDate(poll.end_date)}</span>\r\n                {activeTab === \"ongoing\" && \r\n                  <span>{getTimeRemaining(poll.end_date)}</span>\r\n                }\r\n              </div>\r\n              {poll.vote_count !== undefined && \r\n                <div className=\"vote-count\">{poll.vote_count} vote{poll.vote_count !== 1 ? 's' : ''}</div>\r\n              }\r\n              {poll.hasVoted && \r\n                <div className=\"badge-voted\">Voted</div>\r\n              }\r\n            </div>\r\n            <div className=\"poll-actions\">\r\n              {activeTab === \"ongoing\" && !poll.hasVoted ? (\r\n                <button \r\n                  className=\"vote-btn\"\r\n                  onClick={() => viewPoll(poll.id)}\r\n                >\r\n                  Vote Now\r\n                </button>\r\n              ) : (\r\n                <button \r\n                  className=\"view-results-btn\"\r\n                  onClick={() => viewPoll(poll.id)}\r\n                >\r\n                  View {poll.hasVoted ? \"Results\" : \"Details\"}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"voter-dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <h2>Voter Dashboard</h2>\r\n        <div className=\"user-info\">\r\n          <span>Welcome, {currentUser.name}</span>\r\n          <button onClick={logout} className=\"logout-btn\">Logout</button>\r\n        </div>\r\n      </header>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n\r\n      {loading && <div className=\"loading\">Loading...</div>}\r\n\r\n      {!loading && !selectedPoll && (\r\n        <div className=\"polls-container\">\r\n          <div className=\"polls-tabs\">\r\n            <div className=\"tabs-header\">\r\n              <button \r\n                className={activeTab === \"ongoing\" ? \"active\" : \"\"}\r\n                onClick={() => setActiveTab(\"ongoing\")}\r\n              >\r\n                Ongoing Polls\r\n              </button>\r\n              <button \r\n                className={activeTab === \"past\" ? \"active\" : \"\"}\r\n                onClick={() => setActiveTab(\"past\")}\r\n              >\r\n                Past Polls\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {renderPolls()}\r\n        </div>\r\n      )}\r\n\r\n      {!loading && selectedPoll && (\r\n        <div className=\"poll-details\">\r\n          <button \r\n            onClick={handleBackToPollsList}\r\n            className=\"back-btn\"\r\n          >\r\n            &larr; Back to Polls\r\n          </button>\r\n\r\n          <h3>{selectedPoll.title}</h3>\r\n          <p className=\"poll-description\">{selectedPoll.description}</p>\r\n          \r\n          <div className=\"poll-question-box\">\r\n            <h4>{selectedPoll.question || \"Please cast your vote:\"}</h4>\r\n          </div>\r\n\r\n          {selectedPoll.hasVoted ? (\r\n            <div className=\"already-voted\">\r\n              <p>You have already voted in this poll.</p>\r\n              <button \r\n                onClick={() => viewPollResults(selectedPoll.id)}\r\n                className=\"view-results-btn\"\r\n              >\r\n                View Results\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"voting-area\">              \r\n              <div className=\"options-list\">\r\n                {selectedPoll.options && selectedPoll.options.map(option => (\r\n                  <div \r\n                    key={option.id} \r\n                    className={`option-item ${selectedOption === option.id ? 'selected' : ''}`}\r\n                    onClick={() => setSelectedOption(option.id)}\r\n                  >\r\n                    <div className=\"option-info\">\r\n                      <span>{option.option_text}</span>\r\n                    </div>\r\n                    <div className=\"option-selector\">\r\n                      <input \r\n                        type=\"radio\" \r\n                        name=\"option\" \r\n                        checked={selectedOption === option.id}\r\n                        onChange={() => setSelectedOption(option.id)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <button \r\n                onClick={handleVote}\r\n                className=\"vote-btn\"\r\n                disabled={loading || !selectedOption}\r\n              >\r\n                {loading ? \"Processing...\" : \"Submit Vote\"}\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {selectedPoll.hasVoted && selectedPoll.options && (\r\n            <div className=\"results-preview\">\r\n              <h4>Current Results:</h4>\r\n              <div className=\"results-list\">\r\n                {selectedPoll.options.map(option => {\r\n                  const votePercentage = selectedPoll.vote_count > 0 \r\n                    ? (option.votes / selectedPoll.vote_count) * 100 \r\n                    : 0;\r\n                  \r\n                  return (\r\n                    <div key={option.id} className=\"result-item\">\r\n                      <div className=\"result-info\">\r\n                        <span className=\"option-text\">{option.option_text}</span>\r\n                        <div className=\"vote-bar\">\r\n                          <div \r\n                            className=\"vote-progress\" \r\n                            style={{ width: `${votePercentage}%` }}\r\n                          ></div>\r\n                        </div>\r\n                        <div className=\"vote-stats\">\r\n                          <span>{option.votes} votes</span>\r\n                          <span>{votePercentage.toFixed(1)}%</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoterDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}