{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\voting-system\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../context/AuthContext\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [activeTab, setActiveTab] = useState(\"ongoing\");\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [ongoingPolls, setOngoingPolls] = useState([]);\n  const [pastPolls, setPastPolls] = useState([]);\n  const [pendingPolls, setPendingPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  // Poll form state\n  const [pollTitle, setPollTitle] = useState(\"\");\n  const [pollDescription, setPollDescription] = useState(\"\");\n  const [pollQuestion, setPollQuestion] = useState(\"\");\n  const [pollOptions, setPollOptions] = useState([\"\", \"\"]);\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const fetchPolls = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const ongoingRes = await api.get(\"/polls/ongoing\");\n      const pastRes = await api.get(\"/polls/past\");\n      const pendingRes = await api.get(\"/polls/pending\");\n      setOngoingPolls(ongoingRes.data);\n      setPastPolls(pastRes.data);\n      setPendingPolls(pendingRes.data);\n    } catch (err) {\n      console.error(\"Error fetching polls:\", err);\n      setError(\"Failed to load polls. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPolls();\n    // Poll for updates every minute\n    const intervalId = setInterval(fetchPolls, 60000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const handleCreatePoll = async e => {\n    e.preventDefault();\n\n    // Validate form\n    if (pollTitle.trim().length < 5) {\n      setError(\"Poll title must be at least 5 characters\");\n      return;\n    }\n    if (!pollDescription.trim() || !pollQuestion.trim()) {\n      setError(\"Description and question are required\");\n      return;\n    }\n\n    // Filter out empty options\n    const filteredOptions = pollOptions.filter(opt => opt.trim() !== \"\");\n    if (filteredOptions.length < 2) {\n      setError(\"At least 2 options are required\");\n      return;\n    }\n    if (!startDate || !endDate) {\n      setError(\"Start and end dates are required\");\n      return;\n    }\n    if (new Date(endDate) <= new Date(startDate)) {\n      setError(\"End date must be after start date\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const pollData = {\n      title: pollTitle,\n      description: pollDescription,\n      question: pollQuestion,\n      options: filteredOptions,\n      start_date: startDate,\n      end_date: endDate\n    };\n    try {\n      console.log(\"Sending poll data:\", pollData);\n      const response = await api.post(\"/polls\", pollData);\n      console.log(\"Poll created successfully:\", response.data);\n      setSuccess(\"Poll created successfully!\");\n\n      // Reset form\n      setPollTitle(\"\");\n      setPollDescription(\"\");\n      setPollQuestion(\"\");\n      setPollOptions([\"\", \"\"]);\n      setStartDate(\"\");\n      setEndDate(\"\");\n      setShowCreateForm(false);\n\n      // Refresh polls list\n      fetchPolls();\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data;\n      console.error(\"Error creating poll:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to create poll. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleOptionChange = (index, value) => {\n    const newOptions = [...pollOptions];\n    newOptions[index] = value;\n    setPollOptions(newOptions);\n  };\n  const addOption = () => {\n    setPollOptions([...pollOptions, \"\"]);\n  };\n  const removeOption = index => {\n    if (pollOptions.length > 2) {\n      const newOptions = [...pollOptions];\n      newOptions.splice(index, 1);\n      setPollOptions(newOptions);\n    }\n  };\n  const startPoll = async pollId => {\n    try {\n      await api.put(`/polls/${pollId}/start`);\n      setSuccess(\"Poll started successfully\");\n      fetchPolls();\n    } catch (err) {\n      setError(\"Failed to start poll\");\n      console.error(err);\n    }\n  };\n  const endPoll = async pollId => {\n    try {\n      await api.put(`/polls/${pollId}/end`);\n      setSuccess(\"Poll ended successfully\");\n      fetchPolls();\n    } catch (err) {\n      setError(\"Failed to end poll\");\n      console.error(err);\n    }\n  };\n\n  // Calculate time remaining for a poll\n  const getTimeRemaining = endDate => {\n    const total = Date.parse(endDate) - Date.parse(new Date());\n    if (total <= 0) return \"Ended\";\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / (1000 * 60 * 60) % 24);\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    if (days > 0) return `${days} day${days !== 1 ? \"s\" : \"\"} remaining`;\n    if (hours > 0) return `${hours} hour${hours !== 1 ? \"s\" : \"\"} remaining`;\n    if (minutes > 0) return `${minutes} minute${minutes !== 1 ? \"s\" : \"\"} remaining`;\n    return `${seconds} second${seconds !== 1 ? \"s\" : \"\"} remaining`;\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Renders the appropriate polls based on the active tab\n  const renderPolls = () => {\n    let polls = [];\n    if (activeTab === \"ongoing\") polls = ongoingPolls;else if (activeTab === \"past\") polls = pastPolls;else if (activeTab === \"pending\") polls = pendingPolls;\n    if (loading && polls.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading polls...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 14\n      }, this);\n    }\n    if (polls.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"No \", activeTab, \" polls found.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [activeTab.charAt(0).toUpperCase() + activeTab.slice(1), \" Polls\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `poll-item ${poll.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: poll.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"poll-description\",\n            children: poll.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-question\",\n            children: poll.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-dates\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Start: \", formatDate(poll.start_date)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"End: \", formatDate(poll.end_date)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), activeTab === \"ongoing\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: getTimeRemaining(poll.end_date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), poll.vote_count !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vote-count\",\n            children: [poll.vote_count, \" vote\", poll.vote_count !== 1 ? \"s\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-actions\",\n          children: [activeTab === \"pending\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-poll-btn\",\n            onClick: () => startPoll(poll.id),\n            children: \"Start Poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), activeTab === \"ongoing\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"end-poll-btn\",\n            onClick: () => endPoll(poll.id),\n            children: \"End Poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-results-btn\",\n            children: \"View Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, poll.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", (user === null || user === void 0 ? void 0 : user.name) || \"Admin\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      onClick: () => setError(null),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      onClick: () => setSuccess(null),\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-poll-btn\",\n        onClick: () => setShowCreateForm(!showCreateForm),\n        children: showCreateForm ? \"Cancel\" : \"Create New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), showCreateForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-poll-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreatePoll,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pollTitle\",\n            children: \"Poll Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"pollTitle\",\n            value: pollTitle,\n            onChange: e => setPollTitle(e.target.value),\n            placeholder: \"Enter poll title (min 5 characters)\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pollDescription\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"pollDescription\",\n            value: pollDescription,\n            onChange: e => setPollDescription(e.target.value),\n            placeholder: \"Enter poll description\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pollQuestion\",\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"pollQuestion\",\n            value: pollQuestion,\n            onChange: e => setPollQuestion(e.target.value),\n            placeholder: \"Enter the question for voters\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Options (at least 2)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), pollOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: option,\n              onChange: e => handleOptionChange(index, e.target.value),\n              placeholder: `Option ${index + 1}`,\n              required: index < 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this), index >= 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"remove-option-btn\",\n              onClick: () => removeOption(index),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"add-option-btn\",\n            onClick: addOption,\n            children: \"+ Add Option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDate\",\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            id: \"startDate\",\n            value: startDate,\n            onChange: e => setStartDate(e.target.value),\n            min: new Date().toISOString().slice(0, 16),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"endDate\",\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            id: \"endDate\",\n            value: endDate,\n            onChange: e => setEndDate(e.target.value),\n            min: startDate || new Date().toISOString().slice(0, 16),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-poll-btn\",\n          disabled: loading,\n          children: loading ? \"Creating...\" : \"Create Poll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === \"ongoing\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"ongoing\"),\n          children: \"Ongoing Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === \"pending\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"pending\"),\n          children: \"Pending Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === \"past\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"past\"),\n          children: \"Past Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), renderPolls()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"TpQPasApqLCgWpUNuUrFObrLLXI=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","api","jsxDEV","_jsxDEV","AdminDashboard","_s","user","logout","activeTab","setActiveTab","showCreateForm","setShowCreateForm","ongoingPolls","setOngoingPolls","pastPolls","setPastPolls","pendingPolls","setPendingPolls","loading","setLoading","error","setError","success","setSuccess","pollTitle","setPollTitle","pollDescription","setPollDescription","pollQuestion","setPollQuestion","pollOptions","setPollOptions","startDate","setStartDate","endDate","setEndDate","fetchPolls","ongoingRes","get","pastRes","pendingRes","data","err","console","intervalId","setInterval","clearInterval","handleCreatePoll","e","preventDefault","trim","length","filteredOptions","filter","opt","Date","pollData","title","description","question","options","start_date","end_date","log","response","post","_err$response","_err$response$data","_err$response2","_err$response2$data","message","handleOptionChange","index","value","newOptions","addOption","removeOption","splice","startPoll","pollId","put","endPoll","getTimeRemaining","total","parse","seconds","Math","floor","minutes","hours","days","formatDate","dateString","year","month","day","hour","minute","toLocaleDateString","undefined","renderPolls","polls","className","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","map","poll","status","vote_count","onClick","id","name","onSubmit","htmlFor","type","onChange","target","placeholder","required","option","min","toISOString","disabled","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/voting-system/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport api from \"../services/api\";\r\n\r\nconst AdminDashboard = () => {\r\n  const { user, logout } = useAuth();\r\n  const [activeTab, setActiveTab] = useState(\"ongoing\");\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [ongoingPolls, setOngoingPolls] = useState([]);\r\n  const [pastPolls, setPastPolls] = useState([]);\r\n  const [pendingPolls, setPendingPolls] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  \r\n  // Poll form state\r\n  const [pollTitle, setPollTitle] = useState(\"\");\r\n  const [pollDescription, setPollDescription] = useState(\"\");\r\n  const [pollQuestion, setPollQuestion] = useState(\"\");\r\n  const [pollOptions, setPollOptions] = useState([\"\", \"\"]);\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n  const fetchPolls = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const ongoingRes = await api.get(\"/polls/ongoing\");\r\n      const pastRes = await api.get(\"/polls/past\");\r\n      const pendingRes = await api.get(\"/polls/pending\");\r\n      \r\n      setOngoingPolls(ongoingRes.data);\r\n      setPastPolls(pastRes.data);\r\n      setPendingPolls(pendingRes.data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching polls:\", err);\r\n      setError(\"Failed to load polls. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPolls();\r\n    // Poll for updates every minute\r\n    const intervalId = setInterval(fetchPolls, 60000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const handleCreatePoll = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate form\r\n    if (pollTitle.trim().length < 5) {\r\n      setError(\"Poll title must be at least 5 characters\");\r\n      return;\r\n    }\r\n    \r\n    if (!pollDescription.trim() || !pollQuestion.trim()) {\r\n      setError(\"Description and question are required\");\r\n      return;\r\n    }\r\n    \r\n    // Filter out empty options\r\n    const filteredOptions = pollOptions.filter(opt => opt.trim() !== \"\");\r\n    if (filteredOptions.length < 2) {\r\n      setError(\"At least 2 options are required\");\r\n      return;\r\n    }\r\n\r\n    if (!startDate || !endDate) {\r\n      setError(\"Start and end dates are required\");\r\n      return;\r\n    }\r\n\r\n    if (new Date(endDate) <= new Date(startDate)) {\r\n      setError(\"End date must be after start date\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    const pollData = {\r\n      title: pollTitle,\r\n      description: pollDescription,\r\n      question: pollQuestion,\r\n      options: filteredOptions,\r\n      start_date: startDate,\r\n      end_date: endDate,\r\n    };\r\n    \r\n    try {\r\n      console.log(\"Sending poll data:\", pollData);\r\n      const response = await api.post(\"/polls\", pollData);\r\n      console.log(\"Poll created successfully:\", response.data);\r\n      setSuccess(\"Poll created successfully!\");\r\n      \r\n      // Reset form\r\n      setPollTitle(\"\");\r\n      setPollDescription(\"\");\r\n      setPollQuestion(\"\");\r\n      setPollOptions([\"\", \"\"]);\r\n      setStartDate(\"\");\r\n      setEndDate(\"\");\r\n      setShowCreateForm(false);\r\n      \r\n      // Refresh polls list\r\n      fetchPolls();\r\n    } catch (err) {\r\n      console.error(\"Error creating poll:\", err.response?.data?.message || err.message);\r\n      setError(err.response?.data?.message || \"Failed to create poll. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOptionChange = (index, value) => {\r\n    const newOptions = [...pollOptions];\r\n    newOptions[index] = value;\r\n    setPollOptions(newOptions);\r\n  };\r\n\r\n  const addOption = () => {\r\n    setPollOptions([...pollOptions, \"\"]);\r\n  };\r\n\r\n  const removeOption = (index) => {\r\n    if (pollOptions.length > 2) {\r\n      const newOptions = [...pollOptions];\r\n      newOptions.splice(index, 1);\r\n      setPollOptions(newOptions);\r\n    }\r\n  };\r\n\r\n  const startPoll = async (pollId) => {\r\n    try {\r\n      await api.put(`/polls/${pollId}/start`);\r\n      setSuccess(\"Poll started successfully\");\r\n      fetchPolls();\r\n    } catch (err) {\r\n      setError(\"Failed to start poll\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const endPoll = async (pollId) => {\r\n    try {\r\n      await api.put(`/polls/${pollId}/end`);\r\n      setSuccess(\"Poll ended successfully\");\r\n      fetchPolls();\r\n    } catch (err) {\r\n      setError(\"Failed to end poll\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Calculate time remaining for a poll\r\n  const getTimeRemaining = (endDate) => {\r\n    const total = Date.parse(endDate) - Date.parse(new Date());\r\n    if (total <= 0) return \"Ended\";\r\n    \r\n    const seconds = Math.floor((total / 1000) % 60);\r\n    const minutes = Math.floor((total / 1000 / 60) % 60);\r\n    const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\r\n    \r\n    if (days > 0) return `${days} day${days !== 1 ? \"s\" : \"\"} remaining`;\r\n    if (hours > 0) return `${hours} hour${hours !== 1 ? \"s\" : \"\"} remaining`;\r\n    if (minutes > 0) return `${minutes} minute${minutes !== 1 ? \"s\" : \"\"} remaining`;\r\n    return `${seconds} second${seconds !== 1 ? \"s\" : \"\"} remaining`;\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { \r\n      year: \"numeric\", \r\n      month: \"short\", \r\n      day: \"numeric\",\r\n      hour: \"2-digit\", \r\n      minute: \"2-digit\"\r\n    };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  // Renders the appropriate polls based on the active tab\r\n  const renderPolls = () => {\r\n    let polls = [];\r\n    \r\n    if (activeTab === \"ongoing\") polls = ongoingPolls;\r\n    else if (activeTab === \"past\") polls = pastPolls;\r\n    else if (activeTab === \"pending\") polls = pendingPolls;\r\n    \r\n    if (loading && polls.length === 0) {\r\n      return <div className=\"loading\">Loading polls...</div>;\r\n    }\r\n    \r\n    if (polls.length === 0) {\r\n      return <div>No {activeTab} polls found.</div>;\r\n    }\r\n    \r\n    return (\r\n      <div className=\"polls-list\">\r\n        <h3>{activeTab.charAt(0).toUpperCase() + activeTab.slice(1)} Polls</h3>\r\n        {polls.map(poll => (\r\n          <div key={poll.id} className={`poll-item ${poll.status}`}>\r\n            <div className=\"poll-info\">\r\n              <h4>{poll.title}</h4>\r\n              <p className=\"poll-description\">{poll.description}</p>\r\n              <div className=\"poll-question\">{poll.question}</div>\r\n              <div className=\"poll-dates\">\r\n                <span>Start: {formatDate(poll.start_date)}</span>\r\n                <span>End: {formatDate(poll.end_date)}</span>\r\n                {activeTab === \"ongoing\" && \r\n                  <span>{getTimeRemaining(poll.end_date)}</span>\r\n                }\r\n              </div>\r\n              {poll.vote_count !== undefined && \r\n                <div className=\"vote-count\">{poll.vote_count} vote{poll.vote_count !== 1 ? \"s\" : \"\"}</div>\r\n              }\r\n            </div>\r\n            <div className=\"poll-actions\">\r\n              {activeTab === \"pending\" && (\r\n                <button \r\n                  className=\"start-poll-btn\"\r\n                  onClick={() => startPoll(poll.id)}\r\n                >\r\n                  Start Poll\r\n                </button>\r\n              )}\r\n              {activeTab === \"ongoing\" && (\r\n                <button \r\n                  className=\"end-poll-btn\"\r\n                  onClick={() => endPoll(poll.id)}\r\n                >\r\n                  End Poll\r\n                </button>\r\n              )}\r\n              <button className=\"view-results-btn\">\r\n                View Results\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h2>Admin Dashboard</h2>\r\n        <div className=\"user-info\">\r\n          <span>Welcome, {user?.name || \"Admin\"}</span>\r\n          <button className=\"logout-btn\" onClick={logout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\" onClick={() => setError(null)}>\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      {success && (\r\n        <div className=\"success-message\" onClick={() => setSuccess(null)}>\r\n          {success}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"admin-actions\">\r\n        <button \r\n          className=\"create-poll-btn\"\r\n          onClick={() => setShowCreateForm(!showCreateForm)}\r\n        >\r\n          {showCreateForm ? \"Cancel\" : \"Create New Poll\"}\r\n        </button>\r\n      </div>\r\n\r\n      {showCreateForm && (\r\n        <div className=\"create-poll-form\">\r\n          <h3>Create New Poll</h3>\r\n          <form onSubmit={handleCreatePoll}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"pollTitle\">Poll Title</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"pollTitle\"\r\n                value={pollTitle}\r\n                onChange={(e) => setPollTitle(e.target.value)}\r\n                placeholder=\"Enter poll title (min 5 characters)\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"pollDescription\">Description</label>\r\n              <textarea\r\n                id=\"pollDescription\"\r\n                value={pollDescription}\r\n                onChange={(e) => setPollDescription(e.target.value)}\r\n                placeholder=\"Enter poll description\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"pollQuestion\">Question</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"pollQuestion\"\r\n                value={pollQuestion}\r\n                onChange={(e) => setPollQuestion(e.target.value)}\r\n                placeholder=\"Enter the question for voters\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label>Options (at least 2)</label>\r\n              {pollOptions.map((option, index) => (\r\n                <div key={index} className=\"option-input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={option}\r\n                    onChange={(e) => handleOptionChange(index, e.target.value)}\r\n                    placeholder={`Option ${index + 1}`}\r\n                    required={index < 2}\r\n                  />\r\n                  {index >= 2 && (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"remove-option-btn\"\r\n                      onClick={() => removeOption(index)}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              ))}\r\n              <button\r\n                type=\"button\"\r\n                className=\"add-option-btn\"\r\n                onClick={addOption}\r\n              >\r\n                + Add Option\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"startDate\">Start Date</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                id=\"startDate\"\r\n                value={startDate}\r\n                onChange={(e) => setStartDate(e.target.value)}\r\n                min={new Date().toISOString().slice(0, 16)}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"endDate\">End Date</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                id=\"endDate\"\r\n                value={endDate}\r\n                onChange={(e) => setEndDate(e.target.value)}\r\n                min={startDate || new Date().toISOString().slice(0, 16)}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <button type=\"submit\" className=\"submit-poll-btn\" disabled={loading}>\r\n              {loading ? \"Creating...\" : \"Create Poll\"}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"polls-tabs\">\r\n        <div className=\"tabs-header\">\r\n          <button\r\n            className={activeTab === \"ongoing\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"ongoing\")}\r\n          >\r\n            Ongoing Polls\r\n          </button>\r\n          <button\r\n            className={activeTab === \"pending\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"pending\")}\r\n          >\r\n            Pending Polls\r\n          </button>\r\n          <button\r\n            className={activeTab === \"past\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"past\")}\r\n          >\r\n            Past Polls\r\n          </button>\r\n        </div>\r\n        \r\n        {renderPolls()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGP,OAAO,CAAC,CAAC;EAClC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC4B,eAAe,EAAEC,kBAAkB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgC,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACxD,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMsC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BjB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMgB,UAAU,GAAG,MAAMpC,GAAG,CAACqC,GAAG,CAAC,gBAAgB,CAAC;MAClD,MAAMC,OAAO,GAAG,MAAMtC,GAAG,CAACqC,GAAG,CAAC,aAAa,CAAC;MAC5C,MAAME,UAAU,GAAG,MAAMvC,GAAG,CAACqC,GAAG,CAAC,gBAAgB,CAAC;MAElDzB,eAAe,CAACwB,UAAU,CAACI,IAAI,CAAC;MAChC1B,YAAY,CAACwB,OAAO,CAACE,IAAI,CAAC;MAC1BxB,eAAe,CAACuB,UAAU,CAACC,IAAI,CAAC;IAClC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACvB,KAAK,CAAC,uBAAuB,EAAEsB,GAAG,CAAC;MAC3CrB,QAAQ,CAAC,+CAA+C,CAAC;IAC3D,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdqC,UAAU,CAAC,CAAC;IACZ;IACA,MAAMQ,UAAU,GAAGC,WAAW,CAACT,UAAU,EAAE,KAAK,CAAC;IACjD,OAAO,MAAMU,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAIzB,SAAS,CAAC0B,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MAC/B9B,QAAQ,CAAC,0CAA0C,CAAC;MACpD;IACF;IAEA,IAAI,CAACK,eAAe,CAACwB,IAAI,CAAC,CAAC,IAAI,CAACtB,YAAY,CAACsB,IAAI,CAAC,CAAC,EAAE;MACnD7B,QAAQ,CAAC,uCAAuC,CAAC;MACjD;IACF;;IAEA;IACA,MAAM+B,eAAe,GAAGtB,WAAW,CAACuB,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACJ,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IACpE,IAAIE,eAAe,CAACD,MAAM,GAAG,CAAC,EAAE;MAC9B9B,QAAQ,CAAC,iCAAiC,CAAC;MAC3C;IACF;IAEA,IAAI,CAACW,SAAS,IAAI,CAACE,OAAO,EAAE;MAC1Bb,QAAQ,CAAC,kCAAkC,CAAC;MAC5C;IACF;IAEA,IAAI,IAAIkC,IAAI,CAACrB,OAAO,CAAC,IAAI,IAAIqB,IAAI,CAACvB,SAAS,CAAC,EAAE;MAC5CX,QAAQ,CAAC,mCAAmC,CAAC;MAC7C;IACF;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMmC,QAAQ,GAAG;MACfC,KAAK,EAAEjC,SAAS;MAChBkC,WAAW,EAAEhC,eAAe;MAC5BiC,QAAQ,EAAE/B,YAAY;MACtBgC,OAAO,EAAER,eAAe;MACxBS,UAAU,EAAE7B,SAAS;MACrB8B,QAAQ,EAAE5B;IACZ,CAAC;IAED,IAAI;MACFS,OAAO,CAACoB,GAAG,CAAC,oBAAoB,EAAEP,QAAQ,CAAC;MAC3C,MAAMQ,QAAQ,GAAG,MAAM/D,GAAG,CAACgE,IAAI,CAAC,QAAQ,EAAET,QAAQ,CAAC;MACnDb,OAAO,CAACoB,GAAG,CAAC,4BAA4B,EAAEC,QAAQ,CAACvB,IAAI,CAAC;MACxDlB,UAAU,CAAC,4BAA4B,CAAC;;MAExC;MACAE,YAAY,CAAC,EAAE,CAAC;MAChBE,kBAAkB,CAAC,EAAE,CAAC;MACtBE,eAAe,CAAC,EAAE,CAAC;MACnBE,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MACxBE,YAAY,CAAC,EAAE,CAAC;MAChBE,UAAU,CAAC,EAAE,CAAC;MACdxB,iBAAiB,CAAC,KAAK,CAAC;;MAExB;MACAyB,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOM,GAAG,EAAE;MAAA,IAAAwB,aAAA,EAAAC,kBAAA,EAAAC,cAAA,EAAAC,mBAAA;MACZ1B,OAAO,CAACvB,KAAK,CAAC,sBAAsB,EAAE,EAAA8C,aAAA,GAAAxB,GAAG,CAACsB,QAAQ,cAAAE,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAczB,IAAI,cAAA0B,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAI5B,GAAG,CAAC4B,OAAO,CAAC;MACjFjD,QAAQ,CAAC,EAAA+C,cAAA,GAAA1B,GAAG,CAACsB,QAAQ,cAAAI,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc3B,IAAI,cAAA4B,mBAAA,uBAAlBA,mBAAA,CAAoBC,OAAO,KAAI,0CAA0C,CAAC;IACrF,CAAC,SAAS;MACRnD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMoD,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC3C,MAAMC,UAAU,GAAG,CAAC,GAAG5C,WAAW,CAAC;IACnC4C,UAAU,CAACF,KAAK,CAAC,GAAGC,KAAK;IACzB1C,cAAc,CAAC2C,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB5C,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE,EAAE,CAAC,CAAC;EACtC,CAAC;EAED,MAAM8C,YAAY,GAAIJ,KAAK,IAAK;IAC9B,IAAI1C,WAAW,CAACqB,MAAM,GAAG,CAAC,EAAE;MAC1B,MAAMuB,UAAU,GAAG,CAAC,GAAG5C,WAAW,CAAC;MACnC4C,UAAU,CAACG,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;MAC3BzC,cAAc,CAAC2C,UAAU,CAAC;IAC5B;EACF,CAAC;EAED,MAAMI,SAAS,GAAG,MAAOC,MAAM,IAAK;IAClC,IAAI;MACF,MAAM9E,GAAG,CAAC+E,GAAG,CAAC,UAAUD,MAAM,QAAQ,CAAC;MACvCxD,UAAU,CAAC,2BAA2B,CAAC;MACvCa,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZrB,QAAQ,CAAC,sBAAsB,CAAC;MAChCsB,OAAO,CAACvB,KAAK,CAACsB,GAAG,CAAC;IACpB;EACF,CAAC;EAED,MAAMuC,OAAO,GAAG,MAAOF,MAAM,IAAK;IAChC,IAAI;MACF,MAAM9E,GAAG,CAAC+E,GAAG,CAAC,UAAUD,MAAM,MAAM,CAAC;MACrCxD,UAAU,CAAC,yBAAyB,CAAC;MACrCa,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZrB,QAAQ,CAAC,oBAAoB,CAAC;MAC9BsB,OAAO,CAACvB,KAAK,CAACsB,GAAG,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMwC,gBAAgB,GAAIhD,OAAO,IAAK;IACpC,MAAMiD,KAAK,GAAG5B,IAAI,CAAC6B,KAAK,CAAClD,OAAO,CAAC,GAAGqB,IAAI,CAAC6B,KAAK,CAAC,IAAI7B,IAAI,CAAC,CAAC,CAAC;IAC1D,IAAI4B,KAAK,IAAI,CAAC,EAAE,OAAO,OAAO;IAE9B,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAEJ,KAAK,GAAG,IAAI,GAAI,EAAE,CAAC;IAC/C,MAAMK,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEJ,KAAK,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;IACpD,MAAMM,KAAK,GAAGH,IAAI,CAACC,KAAK,CAAEJ,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;IACzD,MAAMO,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACJ,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAEtD,IAAIO,IAAI,GAAG,CAAC,EAAE,OAAO,GAAGA,IAAI,OAAOA,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,YAAY;IACpE,IAAID,KAAK,GAAG,CAAC,EAAE,OAAO,GAAGA,KAAK,QAAQA,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,YAAY;IACxE,IAAID,OAAO,GAAG,CAAC,EAAE,OAAO,GAAGA,OAAO,UAAUA,OAAO,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,YAAY;IAChF,OAAO,GAAGH,OAAO,UAAUA,OAAO,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,YAAY;EACjE,CAAC;EAED,MAAMM,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMhC,OAAO,GAAG;MACdiC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC;IACD,OAAO,IAAI1C,IAAI,CAACqC,UAAU,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEvC,OAAO,CAAC;EACpE,CAAC;;EAED;EACA,MAAMwC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,KAAK,GAAG,EAAE;IAEd,IAAI7F,SAAS,KAAK,SAAS,EAAE6F,KAAK,GAAGzF,YAAY,CAAC,KAC7C,IAAIJ,SAAS,KAAK,MAAM,EAAE6F,KAAK,GAAGvF,SAAS,CAAC,KAC5C,IAAIN,SAAS,KAAK,SAAS,EAAE6F,KAAK,GAAGrF,YAAY;IAEtD,IAAIE,OAAO,IAAImF,KAAK,CAAClD,MAAM,KAAK,CAAC,EAAE;MACjC,oBAAOhD,OAAA;QAAKmG,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IACxD;IAEA,IAAIN,KAAK,CAAClD,MAAM,KAAK,CAAC,EAAE;MACtB,oBAAOhD,OAAA;QAAAoG,QAAA,GAAK,KAAG,EAAC/F,SAAS,EAAC,eAAa;MAAA;QAAAgG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAC/C;IAEA,oBACExG,OAAA;MAAKmG,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBpG,OAAA;QAAAoG,QAAA,GAAK/F,SAAS,CAACoG,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGrG,SAAS,CAACsG,KAAK,CAAC,CAAC,CAAC,EAAC,QAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACtEN,KAAK,CAACU,GAAG,CAACC,IAAI,iBACb7G,OAAA;QAAmBmG,SAAS,EAAE,aAAaU,IAAI,CAACC,MAAM,EAAG;QAAAV,QAAA,gBACvDpG,OAAA;UAAKmG,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBpG,OAAA;YAAAoG,QAAA,EAAKS,IAAI,CAACvD;UAAK;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBxG,OAAA;YAAGmG,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAES,IAAI,CAACtD;UAAW;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtDxG,OAAA;YAAKmG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAES,IAAI,CAACrD;UAAQ;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpDxG,OAAA;YAAKmG,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBpG,OAAA;cAAAoG,QAAA,GAAM,SAAO,EAACZ,UAAU,CAACqB,IAAI,CAACnD,UAAU,CAAC;YAAA;cAAA2C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjDxG,OAAA;cAAAoG,QAAA,GAAM,OAAK,EAACZ,UAAU,CAACqB,IAAI,CAAClD,QAAQ,CAAC;YAAA;cAAA0C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAC5CnG,SAAS,KAAK,SAAS,iBACtBL,OAAA;cAAAoG,QAAA,EAAOrB,gBAAgB,CAAC8B,IAAI,CAAClD,QAAQ;YAAC;cAAA0C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE7C,CAAC,EACLK,IAAI,CAACE,UAAU,KAAKf,SAAS,iBAC5BhG,OAAA;YAAKmG,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAES,IAAI,CAACE,UAAU,EAAC,OAAK,EAACF,IAAI,CAACE,UAAU,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEzF,CAAC,eACNxG,OAAA;UAAKmG,SAAS,EAAC,cAAc;UAAAC,QAAA,GAC1B/F,SAAS,KAAK,SAAS,iBACtBL,OAAA;YACEmG,SAAS,EAAC,gBAAgB;YAC1Ba,OAAO,EAAEA,CAAA,KAAMrC,SAAS,CAACkC,IAAI,CAACI,EAAE,CAAE;YAAAb,QAAA,EACnC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,EACAnG,SAAS,KAAK,SAAS,iBACtBL,OAAA;YACEmG,SAAS,EAAC,cAAc;YACxBa,OAAO,EAAEA,CAAA,KAAMlC,OAAO,CAAC+B,IAAI,CAACI,EAAE,CAAE;YAAAb,QAAA,EACjC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,eACDxG,OAAA;YAAQmG,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAC;UAErC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GApCEK,IAAI,CAACI,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAqCZ,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;EAED,oBACExG,OAAA;IAAKmG,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BpG,OAAA;MAAKmG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BpG,OAAA;QAAAoG,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBxG,OAAA;QAAKmG,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBpG,OAAA;UAAAoG,QAAA,GAAM,WAAS,EAAC,CAAAjG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE+G,IAAI,KAAI,OAAO;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7CxG,OAAA;UAAQmG,SAAS,EAAC,YAAY;UAACa,OAAO,EAAE5G,MAAO;UAAAgG,QAAA,EAAC;QAEhD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELvF,KAAK,iBACJjB,OAAA;MAAKmG,SAAS,EAAC,eAAe;MAACa,OAAO,EAAEA,CAAA,KAAM9F,QAAQ,CAAC,IAAI,CAAE;MAAAkF,QAAA,EAC1DnF;IAAK;MAAAoF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEArF,OAAO,iBACNnB,OAAA;MAAKmG,SAAS,EAAC,iBAAiB;MAACa,OAAO,EAAEA,CAAA,KAAM5F,UAAU,CAAC,IAAI,CAAE;MAAAgF,QAAA,EAC9DjF;IAAO;MAAAkF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN,eAEDxG,OAAA;MAAKmG,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BpG,OAAA;QACEmG,SAAS,EAAC,iBAAiB;QAC3Ba,OAAO,EAAEA,CAAA,KAAMxG,iBAAiB,CAAC,CAACD,cAAc,CAAE;QAAA6F,QAAA,EAEjD7F,cAAc,GAAG,QAAQ,GAAG;MAAiB;QAAA8F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELjG,cAAc,iBACbP,OAAA;MAAKmG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BpG,OAAA;QAAAoG,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBxG,OAAA;QAAMmH,QAAQ,EAAEvE,gBAAiB;QAAAwD,QAAA,gBAC/BpG,OAAA;UAAKmG,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBpG,OAAA;YAAOoH,OAAO,EAAC,WAAW;YAAAhB,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7CxG,OAAA;YACEqH,IAAI,EAAC,MAAM;YACXJ,EAAE,EAAC,WAAW;YACd3C,KAAK,EAAEjD,SAAU;YACjBiG,QAAQ,EAAGzE,CAAC,IAAKvB,YAAY,CAACuB,CAAC,CAAC0E,MAAM,CAACjD,KAAK,CAAE;YAC9CkD,WAAW,EAAC,qCAAqC;YACjDC,QAAQ;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENxG,OAAA;UAAKmG,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBpG,OAAA;YAAOoH,OAAO,EAAC,iBAAiB;YAAAhB,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpDxG,OAAA;YACEiH,EAAE,EAAC,iBAAiB;YACpB3C,KAAK,EAAE/C,eAAgB;YACvB+F,QAAQ,EAAGzE,CAAC,IAAKrB,kBAAkB,CAACqB,CAAC,CAAC0E,MAAM,CAACjD,KAAK,CAAE;YACpDkD,WAAW,EAAC,wBAAwB;YACpCC,QAAQ;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENxG,OAAA;UAAKmG,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBpG,OAAA;YAAOoH,OAAO,EAAC,cAAc;YAAAhB,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9CxG,OAAA;YACEqH,IAAI,EAAC,MAAM;YACXJ,EAAE,EAAC,cAAc;YACjB3C,KAAK,EAAE7C,YAAa;YACpB6F,QAAQ,EAAGzE,CAAC,IAAKnB,eAAe,CAACmB,CAAC,CAAC0E,MAAM,CAACjD,KAAK,CAAE;YACjDkD,WAAW,EAAC,+BAA+B;YAC3CC,QAAQ;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENxG,OAAA;UAAKmG,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBpG,OAAA;YAAAoG,QAAA,EAAO;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAClC7E,WAAW,CAACiF,GAAG,CAAC,CAACc,MAAM,EAAErD,KAAK,kBAC7BrE,OAAA;YAAiBmG,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBAC7CpG,OAAA;cACEqH,IAAI,EAAC,MAAM;cACX/C,KAAK,EAAEoD,MAAO;cACdJ,QAAQ,EAAGzE,CAAC,IAAKuB,kBAAkB,CAACC,KAAK,EAAExB,CAAC,CAAC0E,MAAM,CAACjD,KAAK,CAAE;cAC3DkD,WAAW,EAAE,UAAUnD,KAAK,GAAG,CAAC,EAAG;cACnCoD,QAAQ,EAAEpD,KAAK,GAAG;YAAE;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,EACDnC,KAAK,IAAI,CAAC,iBACTrE,OAAA;cACEqH,IAAI,EAAC,QAAQ;cACblB,SAAS,EAAC,mBAAmB;cAC7Ba,OAAO,EAAEA,CAAA,KAAMvC,YAAY,CAACJ,KAAK,CAAE;cAAA+B,QAAA,EACpC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT;UAAA,GAhBOnC,KAAK;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiBV,CACN,CAAC,eACFxG,OAAA;YACEqH,IAAI,EAAC,QAAQ;YACblB,SAAS,EAAC,gBAAgB;YAC1Ba,OAAO,EAAExC,SAAU;YAAA4B,QAAA,EACpB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENxG,OAAA;UAAKmG,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBpG,OAAA;YAAOoH,OAAO,EAAC,WAAW;YAAAhB,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7CxG,OAAA;YACEqH,IAAI,EAAC,gBAAgB;YACrBJ,EAAE,EAAC,WAAW;YACd3C,KAAK,EAAEzC,SAAU;YACjByF,QAAQ,EAAGzE,CAAC,IAAKf,YAAY,CAACe,CAAC,CAAC0E,MAAM,CAACjD,KAAK,CAAE;YAC9CqD,GAAG,EAAE,IAAIvE,IAAI,CAAC,CAAC,CAACwE,WAAW,CAAC,CAAC,CAACjB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAE;YAC3Cc,QAAQ;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENxG,OAAA;UAAKmG,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBpG,OAAA;YAAOoH,OAAO,EAAC,SAAS;YAAAhB,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzCxG,OAAA;YACEqH,IAAI,EAAC,gBAAgB;YACrBJ,EAAE,EAAC,SAAS;YACZ3C,KAAK,EAAEvC,OAAQ;YACfuF,QAAQ,EAAGzE,CAAC,IAAKb,UAAU,CAACa,CAAC,CAAC0E,MAAM,CAACjD,KAAK,CAAE;YAC5CqD,GAAG,EAAE9F,SAAS,IAAI,IAAIuB,IAAI,CAAC,CAAC,CAACwE,WAAW,CAAC,CAAC,CAACjB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAE;YACxDc,QAAQ;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENxG,OAAA;UAAQqH,IAAI,EAAC,QAAQ;UAAClB,SAAS,EAAC,iBAAiB;UAAC0B,QAAQ,EAAE9G,OAAQ;UAAAqF,QAAA,EACjErF,OAAO,GAAG,aAAa,GAAG;QAAa;UAAAsF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN,eAEDxG,OAAA;MAAKmG,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBpG,OAAA;QAAKmG,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BpG,OAAA;UACEmG,SAAS,EAAE9F,SAAS,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAG;UACnD2G,OAAO,EAAEA,CAAA,KAAM1G,YAAY,CAAC,SAAS,CAAE;UAAA8F,QAAA,EACxC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxG,OAAA;UACEmG,SAAS,EAAE9F,SAAS,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAG;UACnD2G,OAAO,EAAEA,CAAA,KAAM1G,YAAY,CAAC,SAAS,CAAE;UAAA8F,QAAA,EACxC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxG,OAAA;UACEmG,SAAS,EAAE9F,SAAS,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAG;UAChD2G,OAAO,EAAEA,CAAA,KAAM1G,YAAY,CAAC,MAAM,CAAE;UAAA8F,QAAA,EACrC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELP,WAAW,CAAC,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtG,EAAA,CAnZID,cAAc;EAAA,QACOJ,OAAO;AAAA;AAAAiI,EAAA,GAD5B7H,cAAc;AAqZpB,eAAeA,cAAc;AAAC,IAAA6H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}