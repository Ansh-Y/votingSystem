{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance with defaults\nconst api = axios.create({\n  baseURL: 'http://localhost:3000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle common errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response, _error$response$data;\n  // Handle session expiration\n  if (error.response && error.response.status === 401) {\n    // Check if not login or register request\n    if (!error.config.url.includes('/auth/')) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login?expired=true';\n    }\n  }\n\n  // Enhanced error messages for better debugging\n  const enhancedError = error;\n  enhancedError.friendlyMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred. Please try again later.';\n  return Promise.reject(enhancedError);\n});\n\n// Helper to extract just the data from response\nconst responseBody = response => response.data;\n\n// Define API requests\nconst requests = {\n  get: url => api.get(url).then(responseBody),\n  post: (url, body) => api.post(url, body).then(responseBody),\n  put: (url, body) => api.put(url, body).then(responseBody),\n  delete: url => api.delete(url).then(responseBody)\n};\n\n// Auth related requests\nconst Auth = {\n  login: (email, password) => requests.post('/auth/login', {\n    email,\n    password\n  }),\n  register: (name, email, password, role = 'voter') => requests.post('/auth/register', {\n    name,\n    email,\n    password,\n    role\n  }),\n  verifyToken: () => requests.get('/auth/verify')\n};\n\n// Poll related requests\nconst Polls = {\n  getAll: () => requests.get('/polls'),\n  getById: id => requests.get(`/polls/${id}`),\n  getOngoing: () => requests.get('/polls/ongoing'),\n  getPast: () => requests.get('/polls/past'),\n  getPending: () => requests.get('/polls/pending'),\n  create: pollData => requests.post('/polls/create', pollData),\n  update: (id, pollData) => requests.put(`/polls/${id}`, pollData),\n  delete: id => requests.delete(`/polls/${id}`),\n  start: id => requests.put(`/polls/${id}/start`),\n  end: id => requests.put(`/polls/${id}/end`),\n  getResults: id => requests.get(`/polls/${id}/results`)\n};\n\n// Vote related requests\nconst Votes = {\n  create: voteData => requests.post('/votes', voteData),\n  getUserVotes: () => requests.get('/votes/user'),\n  checkUserVoted: pollId => requests.get(`/votes/user/${pollId}`)\n};\n\n// User profile requests\nconst User = {\n  getCurrent: () => requests.get('/users/profile'),\n  update: userData => requests.put('/users/profile', userData),\n  getAll: () => requests.get('/users')\n};\nexport default api;\nexport { Auth, Polls, Votes, User };","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response$data","status","url","includes","removeItem","window","location","href","enhancedError","friendlyMessage","data","message","responseBody","requests","get","then","post","body","put","delete","Auth","login","email","password","register","name","role","verifyToken","Polls","getAll","getById","id","getOngoing","getPast","getPending","pollData","update","start","end","getResults","Votes","voteData","getUserVotes","checkUserVoted","pollId","User","getCurrent","userData"],"sources":["C:/Users/lenovo/voting-system/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create an axios instance with defaults\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to add auth token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle common errors\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Handle session expiration\r\n    if (error.response && error.response.status === 401) {\r\n      // Check if not login or register request\r\n      if (!error.config.url.includes('/auth/')) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        window.location.href = '/login?expired=true';\r\n      }\r\n    }\r\n    \r\n    // Enhanced error messages for better debugging\r\n    const enhancedError = error;\r\n    enhancedError.friendlyMessage = \r\n      error.response?.data?.message || \r\n      'An error occurred. Please try again later.';\r\n    \r\n    return Promise.reject(enhancedError);\r\n  }\r\n);\r\n\r\n// Helper to extract just the data from response\r\nconst responseBody = (response) => response.data;\r\n\r\n// Define API requests\r\nconst requests = {\r\n  get: (url) => api.get(url).then(responseBody),\r\n  post: (url, body) => api.post(url, body).then(responseBody),\r\n  put: (url, body) => api.put(url, body).then(responseBody),\r\n  delete: (url) => api.delete(url).then(responseBody),\r\n};\r\n\r\n// Auth related requests\r\nconst Auth = {\r\n  login: (email, password) => \r\n    requests.post('/auth/login', { email, password }),\r\n  register: (name, email, password, role = 'voter') => \r\n    requests.post('/auth/register', { name, email, password, role }),\r\n  verifyToken: () => \r\n    requests.get('/auth/verify'),\r\n};\r\n\r\n// Poll related requests\r\nconst Polls = {\r\n  getAll: () => \r\n    requests.get('/polls'),\r\n  getById: (id) => \r\n    requests.get(`/polls/${id}`),\r\n  getOngoing: () => \r\n    requests.get('/polls/ongoing'),\r\n  getPast: () => \r\n    requests.get('/polls/past'),\r\n  getPending: () => \r\n    requests.get('/polls/pending'),\r\n  create: (pollData) => \r\n    requests.post('/polls/create', pollData),\r\n  update: (id, pollData) => \r\n    requests.put(`/polls/${id}`, pollData),\r\n  delete: (id) => \r\n    requests.delete(`/polls/${id}`),\r\n  start: (id) => \r\n    requests.put(`/polls/${id}/start`),\r\n  end: (id) => \r\n    requests.put(`/polls/${id}/end`),\r\n  getResults: (id) => \r\n    requests.get(`/polls/${id}/results`),\r\n};\r\n\r\n// Vote related requests\r\nconst Votes = {\r\n  create: (voteData) => \r\n    requests.post('/votes', voteData),\r\n  getUserVotes: () => \r\n    requests.get('/votes/user'),\r\n  checkUserVoted: (pollId) => \r\n    requests.get(`/votes/user/${pollId}`),\r\n};\r\n\r\n// User profile requests\r\nconst User = {\r\n  getCurrent: () => \r\n    requests.get('/users/profile'),\r\n  update: (userData) => \r\n    requests.put('/users/profile', userData),\r\n  getAll: () => \r\n    requests.get('/users'),\r\n};\r\n\r\nexport default api;\r\nexport { Auth, Polls, Votes, User }; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}