{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\voting-system\\\\src\\\\components\\\\PollDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PollDetails = () => {\n  _s();\n  const {\n    pollId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user,\n    checkToken\n  } = useAuth();\n  const [poll, setPoll] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [alreadyVoted, setAlreadyVoted] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [results, setResults] = useState([]);\n  const [debugInfo, setDebugInfo] = useState(null);\n\n  // Direct fetch for debugging\n  const fetchDirectPollDetails = async () => {\n    try {\n      setLoading(true);\n      console.log(\"Directly fetching poll details for poll ID:\", pollId);\n\n      // Try the debug endpoint that doesn't require authentication\n      const response = await fetch(`http://localhost:5000/api/polls/debug/${pollId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error ${response.status}: ${await response.text()}`);\n      }\n      const data = await response.json();\n      console.log(\"Debug poll details response:\", data);\n      setDebugInfo(data);\n\n      // Use the debug data\n      setPoll(data);\n      setOptions(data.options || []);\n      if (data.hasVoted) {\n        setAlreadyVoted(true);\n        setShowResults(true);\n      }\n      setError(null);\n    } catch (err) {\n      console.error(\"Direct fetch poll details error:\", err);\n      setError(`Debug fetch error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const fetchPollDetails = async () => {\n      try {\n        setLoading(true);\n        console.log(\"Fetching poll details for ID:\", pollId);\n        try {\n          const response = await api.get(`/polls/${pollId}`);\n          console.log(\"Poll details response:\", response.data);\n          setPoll(response.data);\n          setOptions(response.data.options || []);\n\n          // Check if user has already voted\n          const userVoteResponse = await api.get(`/votes/user/${pollId}`);\n          console.log(\"User vote response:\", userVoteResponse);\n          if (userVoteResponse.hasVoted) {\n            setAlreadyVoted(true);\n            setShowResults(true);\n            // Load results automatically if already voted\n            fetchResults();\n          }\n        } catch (apiErr) {\n          console.error('API error fetching poll details:', apiErr);\n          // Fall back to direct fetch\n          await fetchDirectPollDetails();\n        }\n      } catch (err) {\n        console.error('Error fetching poll details:', err);\n        setError('Failed to load poll details. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPollDetails();\n  }, [pollId]);\n  const fetchResults = async () => {\n    try {\n      const response = await api.get(`/polls/${pollId}/results`);\n      setResults(response.data.options || []);\n    } catch (err) {\n      console.error('Error fetching results:', err);\n      setError('Failed to load results. Please try again later.');\n    }\n  };\n  const handleVote = async () => {\n    if (!selectedOption) {\n      setError('Please select an option to vote');\n      return;\n    }\n    try {\n      setSubmitting(true);\n      setError(null);\n      await api.post(`/polls/${pollId}/vote`, {\n        optionId: selectedOption\n      });\n      setSuccess('Your vote has been recorded successfully!');\n      setAlreadyVoted(true);\n      setShowResults(true);\n      fetchResults();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error submitting vote:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to submit your vote. Please try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Not set';\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    try {\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    } catch (err) {\n      console.error('Date formatting error:', err);\n      return 'Invalid date';\n    }\n  };\n\n  // Calculate time remaining for a poll\n  const getTimeRemaining = endDate => {\n    if (!endDate) return 'No end date';\n    try {\n      const total = Date.parse(endDate) - Date.parse(new Date());\n      if (total <= 0) return 'Ended';\n      const seconds = Math.floor(total / 1000 % 60);\n      const minutes = Math.floor(total / 1000 / 60 % 60);\n      const hours = Math.floor(total / (1000 * 60 * 60) % 24);\n      const days = Math.floor(total / (1000 * 60 * 60 * 24));\n      if (days > 0) return `${days} day${days !== 1 ? 's' : ''} remaining`;\n      if (hours > 0) return `${hours} hour${hours !== 1 ? 's' : ''} remaining`;\n      if (minutes > 0) return `${minutes} minute${minutes !== 1 ? 's' : ''} remaining`;\n      return `${seconds} second${seconds !== 1 ? 's' : ''} remaining`;\n    } catch (err) {\n      console.error('Time calculation error:', err);\n      return 'Unknown time remaining';\n    }\n  };\n  const toggleResults = () => {\n    if (!showResults) {\n      fetchResults();\n    }\n    setShowResults(!showResults);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading poll details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 12\n    }, this);\n  }\n  if (!poll) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: () => navigate(-1),\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Poll not found or has been removed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"retry-btn\",\n          onClick: fetchDirectPollDetails,\n          style: {\n            marginTop: '20px',\n            padding: '10px 20px'\n          },\n          children: \"Try Direct Fetch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  }\n  const isPollActive = poll.status === 'ongoing';\n  const totalVotes = results && Array.isArray(results) ? results.reduce((sum, option) => sum + (option.vote_count || option.votes || 0), 0) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-btn\",\n      onClick: () => navigate(-1),\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: poll.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: poll.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-dates\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Started: \", formatDate(poll.start_date)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Ends: \", formatDate(poll.end_date)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), isPollActive && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time-remaining\",\n          children: getTimeRemaining(poll.end_date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-question-box\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: poll.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        onClick: () => setError(null),\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        onClick: () => setSuccess(null),\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debugging-tools\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"debug-btn\",\n          onClick: fetchDirectPollDetails,\n          style: {\n            fontSize: '12px',\n            padding: '5px 10px',\n            background: '#555'\n          },\n          children: \"Debug Fetch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-info\",\n        style: {\n          margin: '10px 0',\n          fontSize: '12px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"details\", {\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            children: \"Debug Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              maxHeight: '150px',\n              overflow: 'auto'\n            },\n            children: JSON.stringify(debugInfo, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), alreadyVoted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"already-voted\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have already cast your vote in this poll.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), !showResults && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-results-btn\",\n          onClick: toggleResults,\n          children: \"View Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isPollActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voting-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-list\",\n            children: options && options.length > 0 ? options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `option-item ${selectedOption === option.id ? 'selected' : ''}`,\n              onClick: () => setSelectedOption(option.id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-info\",\n                children: option.option_text || option.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 23\n              }, this)\n            }, option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No options available for this poll.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"vote-btn\",\n            onClick: handleVote,\n            disabled: !selectedOption || submitting || !options || options.length === 0,\n            children: submitting ? 'Submitting...' : 'Submit Vote'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this), !alreadyVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              marginTop: '12px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleResults,\n              style: {\n                background: 'none',\n                border: 'none',\n                color: 'var(--primary-color)',\n                textDecoration: 'underline',\n                cursor: 'pointer',\n                padding: '5px'\n              },\n              children: showResults ? 'Hide Results' : 'Preview Results'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"already-voted\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"This poll is \", poll.status === 'pending' ? 'not yet started' : 'already ended', \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-results-btn\",\n            onClick: toggleResults,\n            children: showResults ? 'Hide Results' : 'View Results'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Results \", !poll.status === 'ended' && '(Live)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-list\",\n          children: results && results.length > 0 ? results.map(option => {\n            const voteCount = option.vote_count || option.votes || 0;\n            const percentage = totalVotes > 0 ? Math.round(voteCount / totalVotes * 100) : 0;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-text\",\n                children: option.option_text || option.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"vote-progress\",\n                  style: {\n                    width: `${percentage}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"vote-percentage\",\n                  children: [percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"vote-count\",\n                  children: [\"(\", voteCount, \" vote\", voteCount !== 1 ? 's' : '', \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 23\n              }, this)]\n            }, option.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 21\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No results available yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total-votes\",\n          children: [\"Total Votes: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: totalVotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(PollDetails, \"tTA7E9ZOP5Vd7ehslLGTz6H7I6c=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = PollDetails;\nexport default PollDetails;\nvar _c;\n$RefreshReg$(_c, \"PollDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useAuth","api","jsxDEV","_jsxDEV","Fragment","_Fragment","PollDetails","_s","pollId","navigate","user","checkToken","poll","setPoll","options","setOptions","selectedOption","setSelectedOption","loading","setLoading","submitting","setSubmitting","error","setError","success","setSuccess","alreadyVoted","setAlreadyVoted","showResults","setShowResults","results","setResults","debugInfo","setDebugInfo","fetchDirectPollDetails","console","log","response","fetch","ok","Error","status","text","data","json","hasVoted","err","message","fetchPollDetails","get","userVoteResponse","fetchResults","apiErr","handleVote","post","optionId","_err$response","_err$response$data","formatDate","dateString","year","month","day","hour","minute","Date","toLocaleDateString","undefined","getTimeRemaining","endDate","total","parse","seconds","Math","floor","minutes","hours","days","toggleResults","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginTop","padding","isPollActive","totalVotes","Array","isArray","reduce","sum","option","vote_count","votes","title","description","start_date","end_date","question","fontSize","background","margin","maxHeight","overflow","JSON","stringify","length","map","id","option_text","disabled","textAlign","border","color","textDecoration","cursor","voteCount","percentage","round","width","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/voting-system/src/components/PollDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport api from '../services/api';\r\n\r\nconst PollDetails = () => {\r\n  const { pollId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user, checkToken } = useAuth();\r\n  \r\n  const [poll, setPoll] = useState(null);\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [alreadyVoted, setAlreadyVoted] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const [debugInfo, setDebugInfo] = useState(null);\r\n\r\n  // Direct fetch for debugging\r\n  const fetchDirectPollDetails = async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log(\"Directly fetching poll details for poll ID:\", pollId);\r\n      \r\n      // Try the debug endpoint that doesn't require authentication\r\n      const response = await fetch(`http://localhost:5000/api/polls/debug/${pollId}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error ${response.status}: ${await response.text()}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(\"Debug poll details response:\", data);\r\n      setDebugInfo(data);\r\n      \r\n      // Use the debug data\r\n      setPoll(data);\r\n      setOptions(data.options || []);\r\n      \r\n      if (data.hasVoted) {\r\n        setAlreadyVoted(true);\r\n        setShowResults(true);\r\n      }\r\n      \r\n      setError(null);\r\n    } catch (err) {\r\n      console.error(\"Direct fetch poll details error:\", err);\r\n      setError(`Debug fetch error: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const fetchPollDetails = async () => {\r\n      try {\r\n        setLoading(true);\r\n        console.log(\"Fetching poll details for ID:\", pollId);\r\n        \r\n        try {\r\n          const response = await api.get(`/polls/${pollId}`);\r\n          console.log(\"Poll details response:\", response.data);\r\n          setPoll(response.data);\r\n          setOptions(response.data.options || []);\r\n          \r\n          // Check if user has already voted\r\n          const userVoteResponse = await api.get(`/votes/user/${pollId}`);\r\n          console.log(\"User vote response:\", userVoteResponse);\r\n          if (userVoteResponse.hasVoted) {\r\n            setAlreadyVoted(true);\r\n            setShowResults(true);\r\n            // Load results automatically if already voted\r\n            fetchResults();\r\n          }\r\n        } catch (apiErr) {\r\n          console.error('API error fetching poll details:', apiErr);\r\n          // Fall back to direct fetch\r\n          await fetchDirectPollDetails();\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching poll details:', err);\r\n        setError('Failed to load poll details. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchPollDetails();\r\n  }, [pollId]);\r\n  \r\n  const fetchResults = async () => {\r\n    try {\r\n      const response = await api.get(`/polls/${pollId}/results`);\r\n      setResults(response.data.options || []);\r\n    } catch (err) {\r\n      console.error('Error fetching results:', err);\r\n      setError('Failed to load results. Please try again later.');\r\n    }\r\n  };\r\n  \r\n  const handleVote = async () => {\r\n    if (!selectedOption) {\r\n      setError('Please select an option to vote');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setSubmitting(true);\r\n      setError(null);\r\n      \r\n      await api.post(`/polls/${pollId}/vote`, {\r\n        optionId: selectedOption\r\n      });\r\n      \r\n      setSuccess('Your vote has been recorded successfully!');\r\n      setAlreadyVoted(true);\r\n      setShowResults(true);\r\n      fetchResults();\r\n    } catch (err) {\r\n      console.error('Error submitting vote:', err);\r\n      setError(err.response?.data?.error || 'Failed to submit your vote. Please try again.');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n  \r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'Not set';\r\n    \r\n    const options = { \r\n      year: 'numeric', \r\n      month: 'short', \r\n      day: 'numeric',\r\n      hour: '2-digit', \r\n      minute: '2-digit'\r\n    };\r\n    \r\n    try {\r\n      return new Date(dateString).toLocaleDateString(undefined, options);\r\n    } catch (err) {\r\n      console.error('Date formatting error:', err);\r\n      return 'Invalid date';\r\n    }\r\n  };\r\n  \r\n  // Calculate time remaining for a poll\r\n  const getTimeRemaining = (endDate) => {\r\n    if (!endDate) return 'No end date';\r\n    \r\n    try {\r\n      const total = Date.parse(endDate) - Date.parse(new Date());\r\n      if (total <= 0) return 'Ended';\r\n      \r\n      const seconds = Math.floor((total / 1000) % 60);\r\n      const minutes = Math.floor((total / 1000 / 60) % 60);\r\n      const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\r\n      const days = Math.floor(total / (1000 * 60 * 60 * 24));\r\n      \r\n      if (days > 0) return `${days} day${days !== 1 ? 's' : ''} remaining`;\r\n      if (hours > 0) return `${hours} hour${hours !== 1 ? 's' : ''} remaining`;\r\n      if (minutes > 0) return `${minutes} minute${minutes !== 1 ? 's' : ''} remaining`;\r\n      return `${seconds} second${seconds !== 1 ? 's' : ''} remaining`;\r\n    } catch (err) {\r\n      console.error('Time calculation error:', err);\r\n      return 'Unknown time remaining';\r\n    }\r\n  };\r\n  \r\n  const toggleResults = () => {\r\n    if (!showResults) {\r\n      fetchResults();\r\n    }\r\n    setShowResults(!showResults);\r\n  };\r\n  \r\n  if (loading) {\r\n    return <div className=\"loading\">Loading poll details...</div>;\r\n  }\r\n  \r\n  if (!poll) {\r\n    return (\r\n      <div className=\"container\">\r\n        <button className=\"back-btn\" onClick={() => navigate(-1)}>← Back</button>\r\n        <div className=\"error-message\">\r\n          <p>Poll not found or has been removed.</p>\r\n          <button \r\n            className=\"retry-btn\" \r\n            onClick={fetchDirectPollDetails}\r\n            style={{ marginTop: '20px', padding: '10px 20px' }}\r\n          >\r\n            Try Direct Fetch\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  const isPollActive = poll.status === 'ongoing';\r\n  const totalVotes = results && Array.isArray(results) \r\n    ? results.reduce((sum, option) => sum + (option.vote_count || option.votes || 0), 0) \r\n    : 0;\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <button \r\n        className=\"back-btn\" \r\n        onClick={() => navigate(-1)}\r\n      >\r\n        ← Back\r\n      </button>\r\n      \r\n      <div className=\"poll-details\">\r\n        <h3>{poll.title}</h3>\r\n        <p>{poll.description}</p>\r\n        \r\n        <div className=\"poll-dates\">\r\n          <span>Started: {formatDate(poll.start_date)}</span>\r\n          <span>Ends: {formatDate(poll.end_date)}</span>\r\n          {isPollActive && (\r\n            <span className=\"time-remaining\">{getTimeRemaining(poll.end_date)}</span>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"poll-question-box\">\r\n          <h4>{poll.question}</h4>\r\n        </div>\r\n        \r\n        {error && (\r\n          <div className=\"error-message\" onClick={() => setError(null)}>\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        {success && (\r\n          <div className=\"success-message\" onClick={() => setSuccess(null)}>\r\n            {success}\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"debugging-tools\">\r\n          <button \r\n            className=\"debug-btn\" \r\n            onClick={fetchDirectPollDetails}\r\n            style={{ fontSize: '12px', padding: '5px 10px', background: '#555' }}\r\n          >\r\n            Debug Fetch\r\n          </button>\r\n        </div>\r\n        \r\n        {debugInfo && (\r\n          <div className=\"debug-info\" style={{ margin: '10px 0', fontSize: '12px' }}>\r\n            <details>\r\n              <summary>Debug Info</summary>\r\n              <pre style={{ maxHeight: '150px', overflow: 'auto' }}>\r\n                {JSON.stringify(debugInfo, null, 2)}\r\n              </pre>\r\n            </details>\r\n          </div>\r\n        )}\r\n        \r\n        {alreadyVoted ? (\r\n          <div className=\"already-voted\">\r\n            <p>You have already cast your vote in this poll.</p>\r\n            {!showResults && (\r\n              <button \r\n                className=\"view-results-btn\" \r\n                onClick={toggleResults}\r\n              >\r\n                View Results\r\n              </button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {isPollActive ? (\r\n              <div className=\"voting-area\">\r\n                <div className=\"options-list\">\r\n                  {options && options.length > 0 ? options.map(option => (\r\n                    <div \r\n                      key={option.id} \r\n                      className={`option-item ${selectedOption === option.id ? 'selected' : ''}`}\r\n                      onClick={() => setSelectedOption(option.id)}\r\n                    >\r\n                      <div className=\"option-info\">{option.option_text || option.text}</div>\r\n                    </div>\r\n                  )) : <p>No options available for this poll.</p>}\r\n                </div>\r\n                \r\n                <button \r\n                  className=\"vote-btn\" \r\n                  onClick={handleVote}\r\n                  disabled={!selectedOption || submitting || !options || options.length === 0}\r\n                >\r\n                  {submitting ? 'Submitting...' : 'Submit Vote'}\r\n                </button>\r\n                \r\n                {!alreadyVoted && (\r\n                  <div style={{ textAlign: 'center', marginTop: '12px' }}>\r\n                    <button \r\n                      onClick={toggleResults}\r\n                      style={{ \r\n                        background: 'none', \r\n                        border: 'none', \r\n                        color: 'var(--primary-color)',\r\n                        textDecoration: 'underline',\r\n                        cursor: 'pointer',\r\n                        padding: '5px'\r\n                      }}\r\n                    >\r\n                      {showResults ? 'Hide Results' : 'Preview Results'}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"already-voted\">\r\n                <p>This poll is {poll.status === 'pending' ? 'not yet started' : 'already ended'}.</p>\r\n                <button \r\n                  className=\"view-results-btn\" \r\n                  onClick={toggleResults}\r\n                >\r\n                  {showResults ? 'Hide Results' : 'View Results'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n        \r\n        {showResults && (\r\n          <div className=\"results-preview\">\r\n            <h4>Results {!poll.status === 'ended' && '(Live)'}</h4>\r\n            <div className=\"results-list\">\r\n              {results && results.length > 0 ? (\r\n                results.map(option => {\r\n                  const voteCount = option.vote_count || option.votes || 0;\r\n                  const percentage = totalVotes > 0 \r\n                    ? Math.round((voteCount / totalVotes) * 100) \r\n                    : 0;\r\n                    \r\n                  return (\r\n                    <div key={option.id} className=\"result-item\">\r\n                      <span className=\"option-text\">{option.option_text || option.text}</span>\r\n                      <div className=\"vote-bar\">\r\n                        <div \r\n                          className=\"vote-progress\" \r\n                          style={{ width: `${percentage}%` }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"vote-stats\">\r\n                        <span className=\"vote-percentage\">{percentage}%</span>\r\n                        <span className=\"vote-count\">({voteCount} vote{voteCount !== 1 ? 's' : ''})</span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <p>No results available yet.</p>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"total-votes\">\r\n              Total Votes: <strong>{totalVotes}</strong>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollDetails; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}