{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\voting-system\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authAPI } from '../services/api';\n\n// Create the auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Auth provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Initialize auth state on page load\n  useEffect(() => {\n    const initAuth = () => {\n      try {\n        const token = localStorage.getItem('token');\n        const user = localStorage.getItem('user');\n        if (token && user) {\n          setCurrentUser(JSON.parse(user));\n        }\n      } catch (err) {\n        console.error('Auth initialization error:', err);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n    initAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    setError('');\n    setLoading(true);\n    try {\n      const response = await authAPI.login(email, password);\n\n      // Store token and user in localStorage\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n\n      // Update state\n      setCurrentUser(response.data.user);\n\n      // Redirect based on role\n      const {\n        role\n      } = response.data.user;\n      if (role === 'admin') navigate('/admin');else if (role === 'candidate') navigate('/candidate');else if (role === 'voter') navigate('/voter');\n      return response.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Login failed';\n      setError(errorMsg);\n      throw new Error(errorMsg);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async (name, email, password, role) => {\n    setError('');\n    setLoading(true);\n    try {\n      const response = await authAPI.register(name, email, password, role);\n      return response.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      const errorMsg = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Registration failed';\n      setError(errorMsg);\n      throw new Error(errorMsg);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setCurrentUser(null);\n    navigate('/');\n  };\n\n  // Check if user is logged in\n  const isLoggedIn = () => {\n    return !!currentUser;\n  };\n\n  // Check if user has specific role\n  const hasRole = role => {\n    return currentUser && currentUser.role === role;\n  };\n\n  // Context value\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isLoggedIn,\n    hasRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"5iCqshW3ag96MHHgbPUR57Q3+B4=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","error","setError","navigate","initAuth","token","localStorage","getItem","user","JSON","parse","err","console","removeItem","login","email","password","response","setItem","data","stringify","role","_err$response","_err$response$data","errorMsg","Error","register","name","_err$response2","_err$response2$data","logout","isLoggedIn","hasRole","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/voting-system/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { authAPI } from '../services/api';\r\n\r\n// Create the auth context\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Initialize auth state on page load\r\n  useEffect(() => {\r\n    const initAuth = () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const user = localStorage.getItem('user');\r\n        \r\n        if (token && user) {\r\n          setCurrentUser(JSON.parse(user));\r\n        }\r\n      } catch (err) {\r\n        console.error('Auth initialization error:', err);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    setError('');\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const response = await authAPI.login(email, password);\r\n      \r\n      // Store token and user in localStorage\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n      \r\n      // Update state\r\n      setCurrentUser(response.data.user);\r\n      \r\n      // Redirect based on role\r\n      const { role } = response.data.user;\r\n      if (role === 'admin') navigate('/admin');\r\n      else if (role === 'candidate') navigate('/candidate');\r\n      else if (role === 'voter') navigate('/voter');\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      const errorMsg = err.response?.data?.error || 'Login failed';\r\n      setError(errorMsg);\r\n      throw new Error(errorMsg);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (name, email, password, role) => {\r\n    setError('');\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const response = await authAPI.register(name, email, password, role);\r\n      return response.data;\r\n    } catch (err) {\r\n      const errorMsg = err.response?.data?.error || 'Registration failed';\r\n      setError(errorMsg);\r\n      throw new Error(errorMsg);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setCurrentUser(null);\r\n    navigate('/');\r\n  };\r\n\r\n  // Check if user is logged in\r\n  const isLoggedIn = () => {\r\n    return !!currentUser;\r\n  };\r\n\r\n  // Check if user has specific role\r\n  const hasRole = (role) => {\r\n    return currentUser && currentUser.role === role;\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    currentUser,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    isLoggedIn,\r\n    hasRole\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}