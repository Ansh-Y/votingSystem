{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\voting-system\\\\src\\\\components\\\\PollDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PollDetails = () => {\n  _s();\n  const {\n    pollId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [poll, setPoll] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [alreadyVoted, setAlreadyVoted] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    const fetchPollDetails = async () => {\n      try {\n        setLoading(true);\n        const response = await api.get(`/polls/${pollId}`);\n        setPoll(response.data);\n        setOptions(response.data.options || []);\n\n        // Check if user has already voted\n        const userVoteResponse = await api.get(`/votes/user/${pollId}`);\n        if (userVoteResponse.data.hasVoted) {\n          setAlreadyVoted(true);\n          setShowResults(true);\n          // Load results automatically if already voted\n          fetchResults();\n        }\n      } catch (err) {\n        console.error('Error fetching poll details:', err);\n        setError('Failed to load poll details. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPollDetails();\n  }, [pollId]);\n  const fetchResults = async () => {\n    try {\n      const response = await api.get(`/polls/${pollId}/results`);\n      setResults(response.data);\n    } catch (err) {\n      console.error('Error fetching results:', err);\n      setError('Failed to load results. Please try again later.');\n    }\n  };\n  const handleVote = async () => {\n    if (!selectedOption) {\n      setError('Please select an option to vote');\n      return;\n    }\n    try {\n      setSubmitting(true);\n      setError(null);\n      await api.post('/votes', {\n        poll_id: pollId,\n        option_id: selectedOption\n      });\n      setSuccess('Your vote has been recorded successfully!');\n      setAlreadyVoted(true);\n      setShowResults(true);\n      fetchResults();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error submitting vote:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to submit your vote. Please try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Calculate time remaining for a poll\n  const getTimeRemaining = endDate => {\n    const total = Date.parse(endDate) - Date.parse(new Date());\n    if (total <= 0) return 'Ended';\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / (1000 * 60 * 60) % 24);\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    if (days > 0) return `${days} day${days !== 1 ? 's' : ''} remaining`;\n    if (hours > 0) return `${hours} hour${hours !== 1 ? 's' : ''} remaining`;\n    if (minutes > 0) return `${minutes} minute${minutes !== 1 ? 's' : ''} remaining`;\n    return `${seconds} second${seconds !== 1 ? 's' : ''} remaining`;\n  };\n  const toggleResults = () => {\n    if (!showResults) {\n      fetchResults();\n    }\n    setShowResults(!showResults);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading poll details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 12\n    }, this);\n  }\n  if (!poll) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: \"Poll not found or has been removed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 12\n    }, this);\n  }\n  const isPollActive = poll.status === 'ongoing';\n  const totalVotes = results.reduce((sum, option) => sum + option.votes, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-btn\",\n      onClick: () => navigate(-1),\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: poll.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: poll.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-dates\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Started: \", formatDate(poll.start_date)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Ends: \", formatDate(poll.end_date)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), isPollActive && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time-remaining\",\n          children: getTimeRemaining(poll.end_date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-question-box\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: poll.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        onClick: () => setError(null),\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        onClick: () => setSuccess(null),\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), alreadyVoted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"already-voted\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have already cast your vote in this poll.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), !showResults && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-results-btn\",\n          onClick: toggleResults,\n          children: \"View Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isPollActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voting-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-list\",\n            children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `option-item ${selectedOption === option.id ? 'selected' : ''}`,\n              onClick: () => setSelectedOption(option.id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-info\",\n                children: option.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 23\n              }, this)\n            }, option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"vote-btn\",\n            onClick: handleVote,\n            disabled: !selectedOption || submitting,\n            children: submitting ? 'Submitting...' : 'Submit Vote'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), !alreadyVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              marginTop: '12px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleResults,\n              style: {\n                background: 'none',\n                border: 'none',\n                color: 'var(--primary-color)',\n                textDecoration: 'underline',\n                cursor: 'pointer',\n                padding: '5px'\n              },\n              children: showResults ? 'Hide Results' : 'Preview Results'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"already-voted\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"This poll is \", poll.status === 'pending' ? 'not yet started' : 'already ended', \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-results-btn\",\n            onClick: toggleResults,\n            children: showResults ? 'Hide Results' : 'View Results'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Results \", !poll.status === 'ended' && '(Live)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-list\",\n          children: results.length > 0 ? results.map(option => {\n            const percentage = totalVotes > 0 ? Math.round(option.votes / totalVotes * 100) : 0;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-text\",\n                children: option.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"vote-progress\",\n                  style: {\n                    width: `${percentage}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [option.votes, \" vote\", option.votes !== 1 ? 's' : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 23\n              }, this)]\n            }, option.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 21\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No votes have been cast yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total votes: \", totalVotes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(PollDetails, \"f+cDqVe9CYRHHIX/I25s9uJaUho=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = PollDetails;\nexport default PollDetails;\nvar _c;\n$RefreshReg$(_c, \"PollDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useAuth","api","jsxDEV","_jsxDEV","Fragment","_Fragment","PollDetails","_s","pollId","navigate","user","poll","setPoll","options","setOptions","selectedOption","setSelectedOption","loading","setLoading","submitting","setSubmitting","error","setError","success","setSuccess","alreadyVoted","setAlreadyVoted","showResults","setShowResults","results","setResults","fetchPollDetails","response","get","data","userVoteResponse","hasVoted","fetchResults","err","console","handleVote","post","poll_id","option_id","_err$response","_err$response$data","message","formatDate","dateString","year","month","day","hour","minute","Date","toLocaleDateString","undefined","getTimeRemaining","endDate","total","parse","seconds","Math","floor","minutes","hours","days","toggleResults","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isPollActive","status","totalVotes","reduce","sum","option","votes","onClick","title","description","start_date","end_date","question","map","id","text","disabled","style","textAlign","marginTop","background","border","color","textDecoration","cursor","padding","length","percentage","round","width","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/voting-system/src/components/PollDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport api from '../services/api';\r\n\r\nconst PollDetails = () => {\r\n  const { pollId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  \r\n  const [poll, setPoll] = useState(null);\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [alreadyVoted, setAlreadyVoted] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const fetchPollDetails = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await api.get(`/polls/${pollId}`);\r\n        setPoll(response.data);\r\n        setOptions(response.data.options || []);\r\n        \r\n        // Check if user has already voted\r\n        const userVoteResponse = await api.get(`/votes/user/${pollId}`);\r\n        if (userVoteResponse.data.hasVoted) {\r\n          setAlreadyVoted(true);\r\n          setShowResults(true);\r\n          // Load results automatically if already voted\r\n          fetchResults();\r\n        }\r\n        \r\n      } catch (err) {\r\n        console.error('Error fetching poll details:', err);\r\n        setError('Failed to load poll details. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchPollDetails();\r\n  }, [pollId]);\r\n  \r\n  const fetchResults = async () => {\r\n    try {\r\n      const response = await api.get(`/polls/${pollId}/results`);\r\n      setResults(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching results:', err);\r\n      setError('Failed to load results. Please try again later.');\r\n    }\r\n  };\r\n  \r\n  const handleVote = async () => {\r\n    if (!selectedOption) {\r\n      setError('Please select an option to vote');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setSubmitting(true);\r\n      setError(null);\r\n      \r\n      await api.post('/votes', {\r\n        poll_id: pollId,\r\n        option_id: selectedOption\r\n      });\r\n      \r\n      setSuccess('Your vote has been recorded successfully!');\r\n      setAlreadyVoted(true);\r\n      setShowResults(true);\r\n      fetchResults();\r\n    } catch (err) {\r\n      console.error('Error submitting vote:', err);\r\n      setError(err.response?.data?.message || 'Failed to submit your vote. Please try again.');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n  \r\n  const formatDate = (dateString) => {\r\n    const options = { \r\n      year: 'numeric', \r\n      month: 'short', \r\n      day: 'numeric',\r\n      hour: '2-digit', \r\n      minute: '2-digit'\r\n    };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n  \r\n  // Calculate time remaining for a poll\r\n  const getTimeRemaining = (endDate) => {\r\n    const total = Date.parse(endDate) - Date.parse(new Date());\r\n    if (total <= 0) return 'Ended';\r\n    \r\n    const seconds = Math.floor((total / 1000) % 60);\r\n    const minutes = Math.floor((total / 1000 / 60) % 60);\r\n    const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\r\n    \r\n    if (days > 0) return `${days} day${days !== 1 ? 's' : ''} remaining`;\r\n    if (hours > 0) return `${hours} hour${hours !== 1 ? 's' : ''} remaining`;\r\n    if (minutes > 0) return `${minutes} minute${minutes !== 1 ? 's' : ''} remaining`;\r\n    return `${seconds} second${seconds !== 1 ? 's' : ''} remaining`;\r\n  };\r\n  \r\n  const toggleResults = () => {\r\n    if (!showResults) {\r\n      fetchResults();\r\n    }\r\n    setShowResults(!showResults);\r\n  };\r\n  \r\n  if (loading) {\r\n    return <div className=\"loading\">Loading poll details...</div>;\r\n  }\r\n  \r\n  if (!poll) {\r\n    return <div className=\"error-message\">Poll not found or has been removed.</div>;\r\n  }\r\n  \r\n  const isPollActive = poll.status === 'ongoing';\r\n  const totalVotes = results.reduce((sum, option) => sum + option.votes, 0);\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <button \r\n        className=\"back-btn\" \r\n        onClick={() => navigate(-1)}\r\n      >\r\n        ← Back\r\n      </button>\r\n      \r\n      <div className=\"poll-details\">\r\n        <h3>{poll.title}</h3>\r\n        <p>{poll.description}</p>\r\n        \r\n        <div className=\"poll-dates\">\r\n          <span>Started: {formatDate(poll.start_date)}</span>\r\n          <span>Ends: {formatDate(poll.end_date)}</span>\r\n          {isPollActive && (\r\n            <span className=\"time-remaining\">{getTimeRemaining(poll.end_date)}</span>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"poll-question-box\">\r\n          <h4>{poll.question}</h4>\r\n        </div>\r\n        \r\n        {error && (\r\n          <div className=\"error-message\" onClick={() => setError(null)}>\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        {success && (\r\n          <div className=\"success-message\" onClick={() => setSuccess(null)}>\r\n            {success}\r\n          </div>\r\n        )}\r\n        \r\n        {alreadyVoted ? (\r\n          <div className=\"already-voted\">\r\n            <p>You have already cast your vote in this poll.</p>\r\n            {!showResults && (\r\n              <button \r\n                className=\"view-results-btn\" \r\n                onClick={toggleResults}\r\n              >\r\n                View Results\r\n              </button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {isPollActive ? (\r\n              <div className=\"voting-area\">\r\n                <div className=\"options-list\">\r\n                  {options.map(option => (\r\n                    <div \r\n                      key={option.id} \r\n                      className={`option-item ${selectedOption === option.id ? 'selected' : ''}`}\r\n                      onClick={() => setSelectedOption(option.id)}\r\n                    >\r\n                      <div className=\"option-info\">{option.text}</div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                \r\n                <button \r\n                  className=\"vote-btn\" \r\n                  onClick={handleVote}\r\n                  disabled={!selectedOption || submitting}\r\n                >\r\n                  {submitting ? 'Submitting...' : 'Submit Vote'}\r\n                </button>\r\n                \r\n                {!alreadyVoted && (\r\n                  <div style={{ textAlign: 'center', marginTop: '12px' }}>\r\n                    <button \r\n                      onClick={toggleResults}\r\n                      style={{ \r\n                        background: 'none', \r\n                        border: 'none', \r\n                        color: 'var(--primary-color)',\r\n                        textDecoration: 'underline',\r\n                        cursor: 'pointer',\r\n                        padding: '5px'\r\n                      }}\r\n                    >\r\n                      {showResults ? 'Hide Results' : 'Preview Results'}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"already-voted\">\r\n                <p>This poll is {poll.status === 'pending' ? 'not yet started' : 'already ended'}.</p>\r\n                <button \r\n                  className=\"view-results-btn\" \r\n                  onClick={toggleResults}\r\n                >\r\n                  {showResults ? 'Hide Results' : 'View Results'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n        \r\n        {showResults && (\r\n          <div className=\"results-preview\">\r\n            <h4>Results {!poll.status === 'ended' && '(Live)'}</h4>\r\n            <div className=\"results-list\">\r\n              {results.length > 0 ? (\r\n                results.map(option => {\r\n                  const percentage = totalVotes > 0 \r\n                    ? Math.round((option.votes / totalVotes) * 100) \r\n                    : 0;\r\n                    \r\n                  return (\r\n                    <div key={option.id} className=\"result-item\">\r\n                      <span className=\"option-text\">{option.text}</span>\r\n                      <div className=\"vote-bar\">\r\n                        <div \r\n                          className=\"vote-progress\" \r\n                          style={{ width: `${percentage}%` }}\r\n                        ></div>\r\n                      </div>\r\n                      <div className=\"vote-stats\">\r\n                        <span>{percentage}%</span>\r\n                        <span>{option.votes} vote{option.votes !== 1 ? 's' : ''}</span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <p>No votes have been cast yet.</p>\r\n              )}\r\n            </div>\r\n            <div style={{ marginTop: '20px', textAlign: 'center' }}>\r\n              <p>Total votes: {totalVotes}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollDetails; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}