{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\voting-system\\\\src\\\\components\\\\VoterDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport api, { Polls, Votes } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoterDashboard = () => {\n  _s();\n  const {\n    user,\n    logout,\n    checkToken\n  } = useAuth();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(\"ongoing\");\n  const [ongoingPolls, setOngoingPolls] = useState([]);\n  const [pastPolls, setPastPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null);\n\n  // Check authentication token on component mount\n  useEffect(() => {\n    const tokenInfo = checkToken();\n    console.log(\"VoterDashboard - Token check on mount:\", tokenInfo.token ? \"Token exists\" : \"No token\");\n    if (!tokenInfo.token) {\n      setError(\"Authentication issue: No valid token found\");\n    }\n  }, [checkToken]);\n  const fetchPollsDebug = async () => {\n    try {\n      console.log(\"Fetching debug polls directly\");\n      const response = await fetch('http://localhost:5000/api/polls/debug/ongoing');\n      const data = await response.json();\n      console.log(\"Debug data:\", data);\n      setDebugInfo(data);\n      if (data.polls && data.polls.length > 0) {\n        setOngoingPolls(data.polls);\n      }\n    } catch (err) {\n      console.error(\"Debug fetch error:\", err);\n      setError(`Debug error: ${err.message}`);\n    }\n  };\n  const fetchPollsDirectly = async () => {\n    try {\n      setLoading(true);\n      console.log(\"Fetching polls directly with token\");\n\n      // Check token first\n      const tokenInfo = checkToken();\n      if (!tokenInfo.token) {\n        setError(\"No authentication token available\");\n        setLoading(false);\n        return;\n      }\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${tokenInfo.token}`\n      };\n      console.log(\"Using headers:\", headers);\n      const response = await fetch('http://localhost:5000/api/polls/ongoing', {\n        method: 'GET',\n        headers: headers\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error ${response.status}: ${await response.text()}`);\n      }\n      const data = await response.json();\n      console.log(\"Direct fetch response:\", data);\n      if (Array.isArray(data)) {\n        setOngoingPolls(data);\n        console.log(`Direct fetch got ${data.length} ongoing polls`);\n      } else {\n        console.error(\"Unexpected response format:\", data);\n        setError(\"Unexpected response format\");\n      }\n    } catch (err) {\n      console.error(\"Direct fetch error:\", err);\n      setError(`Fetch error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchPolls = async () => {\n    try {\n      setLoading(true);\n      console.log(\"=============================================\");\n      console.log(\"Fetching polls for voter dashboard...\");\n\n      // Check token first\n      const tokenInfo = checkToken();\n      const ongoingRes = await Polls.getOngoing();\n      console.log(\"Voter dashboard - Ongoing polls:\", ongoingRes);\n      console.log(`Received ${ongoingRes.length} ongoing polls`);\n      const pastRes = await Polls.getPast();\n      console.log(\"Voter dashboard - Past polls:\", pastRes);\n      console.log(`Received ${pastRes.length} past polls`);\n\n      // Get user votes to mark polls they've already voted on\n      const userVotesRes = await Votes.getUserVotes();\n      console.log(\"User votes:\", userVotesRes);\n      const userVotedPollIds = new Set(userVotesRes.map(vote => vote.poll_id));\n\n      // Mark polls that the user has voted on\n      const markVotedPolls = polls => {\n        return polls.map(poll => ({\n          ...poll,\n          hasVoted: userVotedPollIds.has(poll.id)\n        }));\n      };\n      setOngoingPolls(markVotedPolls(ongoingRes));\n      setPastPolls(markVotedPolls(pastRes));\n    } catch (err) {\n      console.error('Error fetching polls:', err);\n      setError('Failed to load polls. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPolls();\n    // Poll for updates every minute\n    const intervalId = setInterval(fetchPolls, 60000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const viewPoll = pollId => {\n    navigate(`/polls/${pollId}`);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Not set';\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    try {\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    } catch (err) {\n      console.error('Date formatting error:', err);\n      return 'Invalid date';\n    }\n  };\n\n  // Calculate time remaining for a poll\n  const getTimeRemaining = endDate => {\n    // Handle null or invalid end date\n    if (!endDate) return 'No end date';\n    const total = Date.parse(endDate) - Date.parse(new Date());\n    if (total <= 0) return 'Ended';\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / (1000 * 60 * 60) % 24);\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    if (days > 0) return `${days} day${days !== 1 ? 's' : ''} remaining`;\n    if (hours > 0) return `${hours} hour${hours !== 1 ? 's' : ''} remaining`;\n    if (minutes > 0) return `${minutes} minute${minutes !== 1 ? 's' : ''} remaining`;\n    return `${seconds} second${seconds !== 1 ? 's' : ''} remaining`;\n  };\n  const renderPolls = () => {\n    const polls = activeTab === \"ongoing\" ? ongoingPolls : pastPolls;\n    if (loading && polls.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading polls...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 14\n      }, this);\n    }\n    if (polls.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"No \", activeTab, \" polls found.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [activeTab === \"ongoing\" ? \"Ongoing\" : \"Past\", \" Polls\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `poll-item ${poll.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: poll.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"poll-description\",\n            children: poll.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-question\",\n            children: poll.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-dates\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Start: \", formatDate(poll.start_date)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"End: \", formatDate(poll.end_date)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), activeTab === \"ongoing\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: getTimeRemaining(poll.end_date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), poll.vote_count !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vote-count\",\n            children: [poll.vote_count, \" vote\", poll.vote_count !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this), poll.hasVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"badge-voted\",\n            children: \"Voted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-actions\",\n          children: activeTab === \"ongoing\" && !poll.hasVoted ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"vote-btn\",\n            onClick: () => viewPoll(poll.id),\n            children: \"Vote Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-results-btn\",\n            onClick: () => viewPoll(poll.id),\n            children: [\"View \", poll.hasVoted ? \"Results\" : \"Details\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, poll.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voter-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Voter Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", (user === null || user === void 0 ? void 0 : user.name) || 'Voter']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      onClick: () => setError(null),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-btn\",\n        onClick: fetchPolls,\n        children: \"Refresh Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"debug-btn\",\n        onClick: fetchPollsDebug,\n        children: \"Debug Fetch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"direct-fetch-btn\",\n        onClick: fetchPollsDirectly,\n        children: \"Direct Fetch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-status\",\n      children: loading ? \"Loading polls...\" : `${ongoingPolls.length} ongoing poll(s), ${pastPolls.length} past poll(s)`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Debug Info:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(debugInfo, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === \"ongoing\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"ongoing\"),\n          children: \"Ongoing Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === \"past\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"past\"),\n          children: \"Past Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), renderPolls()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n_s(VoterDashboard, \"FTCsCZjmDhqDwah14ueEnPLSNJU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = VoterDashboard;\nexport default VoterDashboard;\nvar _c;\n$RefreshReg$(_c, \"VoterDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","api","Polls","Votes","jsxDEV","_jsxDEV","VoterDashboard","_s","user","logout","checkToken","navigate","activeTab","setActiveTab","ongoingPolls","setOngoingPolls","pastPolls","setPastPolls","loading","setLoading","error","setError","debugInfo","setDebugInfo","tokenInfo","console","log","token","fetchPollsDebug","response","fetch","data","json","polls","length","err","message","fetchPollsDirectly","headers","method","ok","Error","status","text","Array","isArray","fetchPolls","ongoingRes","getOngoing","pastRes","getPast","userVotesRes","getUserVotes","userVotedPollIds","Set","map","vote","poll_id","markVotedPolls","poll","hasVoted","has","id","intervalId","setInterval","clearInterval","viewPoll","pollId","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","getTimeRemaining","endDate","total","parse","seconds","Math","floor","minutes","hours","days","renderPolls","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","question","start_date","end_date","vote_count","onClick","name","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/voting-system/src/components/VoterDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport api, { Polls, Votes } from \"../services/api\";\r\n\r\nconst VoterDashboard = () => {\r\n  const { user, logout, checkToken } = useAuth();\r\n  const navigate = useNavigate();\r\n  \r\n  const [activeTab, setActiveTab] = useState(\"ongoing\");\r\n  const [ongoingPolls, setOngoingPolls] = useState([]);\r\n  const [pastPolls, setPastPolls] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState(null);\r\n  \r\n  // Check authentication token on component mount\r\n  useEffect(() => {\r\n    const tokenInfo = checkToken();\r\n    console.log(\"VoterDashboard - Token check on mount:\", tokenInfo.token ? \"Token exists\" : \"No token\");\r\n    if (!tokenInfo.token) {\r\n      setError(\"Authentication issue: No valid token found\");\r\n    }\r\n  }, [checkToken]);\r\n  \r\n  const fetchPollsDebug = async () => {\r\n    try {\r\n      console.log(\"Fetching debug polls directly\");\r\n      const response = await fetch('http://localhost:5000/api/polls/debug/ongoing');\r\n      const data = await response.json();\r\n      console.log(\"Debug data:\", data);\r\n      setDebugInfo(data);\r\n      \r\n      if (data.polls && data.polls.length > 0) {\r\n        setOngoingPolls(data.polls);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Debug fetch error:\", err);\r\n      setError(`Debug error: ${err.message}`);\r\n    }\r\n  };\r\n  \r\n  const fetchPollsDirectly = async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log(\"Fetching polls directly with token\");\r\n      \r\n      // Check token first\r\n      const tokenInfo = checkToken();\r\n      if (!tokenInfo.token) {\r\n        setError(\"No authentication token available\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${tokenInfo.token}`\r\n      };\r\n      \r\n      console.log(\"Using headers:\", headers);\r\n      \r\n      const response = await fetch('http://localhost:5000/api/polls/ongoing', {\r\n        method: 'GET',\r\n        headers: headers\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error ${response.status}: ${await response.text()}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(\"Direct fetch response:\", data);\r\n      \r\n      if (Array.isArray(data)) {\r\n        setOngoingPolls(data);\r\n        console.log(`Direct fetch got ${data.length} ongoing polls`);\r\n      } else {\r\n        console.error(\"Unexpected response format:\", data);\r\n        setError(\"Unexpected response format\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Direct fetch error:\", err);\r\n      setError(`Fetch error: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const fetchPolls = async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log(\"=============================================\");\r\n      console.log(\"Fetching polls for voter dashboard...\");\r\n      \r\n      // Check token first\r\n      const tokenInfo = checkToken();\r\n      \r\n      const ongoingRes = await Polls.getOngoing();\r\n      console.log(\"Voter dashboard - Ongoing polls:\", ongoingRes);\r\n      console.log(`Received ${ongoingRes.length} ongoing polls`);\r\n      \r\n      const pastRes = await Polls.getPast();\r\n      console.log(\"Voter dashboard - Past polls:\", pastRes);\r\n      console.log(`Received ${pastRes.length} past polls`);\r\n      \r\n      // Get user votes to mark polls they've already voted on\r\n      const userVotesRes = await Votes.getUserVotes();\r\n      console.log(\"User votes:\", userVotesRes);\r\n      const userVotedPollIds = new Set(userVotesRes.map(vote => vote.poll_id));\r\n      \r\n      // Mark polls that the user has voted on\r\n      const markVotedPolls = (polls) => {\r\n        return polls.map(poll => ({\r\n          ...poll,\r\n          hasVoted: userVotedPollIds.has(poll.id)\r\n        }));\r\n      };\r\n      \r\n      setOngoingPolls(markVotedPolls(ongoingRes));\r\n      setPastPolls(markVotedPolls(pastRes));\r\n    } catch (err) {\r\n      console.error('Error fetching polls:', err);\r\n      setError('Failed to load polls. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    fetchPolls();\r\n    // Poll for updates every minute\r\n    const intervalId = setInterval(fetchPolls, 60000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n  \r\n  const viewPoll = (pollId) => {\r\n    navigate(`/polls/${pollId}`);\r\n  };\r\n  \r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'Not set';\r\n    \r\n    const options = { \r\n      year: 'numeric', \r\n      month: 'short', \r\n      day: 'numeric',\r\n      hour: '2-digit', \r\n      minute: '2-digit'\r\n    };\r\n    \r\n    try {\r\n      return new Date(dateString).toLocaleDateString(undefined, options);\r\n    } catch (err) {\r\n      console.error('Date formatting error:', err);\r\n      return 'Invalid date';\r\n    }\r\n  };\r\n  \r\n  // Calculate time remaining for a poll\r\n  const getTimeRemaining = (endDate) => {\r\n    // Handle null or invalid end date\r\n    if (!endDate) return 'No end date';\r\n    \r\n    const total = Date.parse(endDate) - Date.parse(new Date());\r\n    if (total <= 0) return 'Ended';\r\n    \r\n    const seconds = Math.floor((total / 1000) % 60);\r\n    const minutes = Math.floor((total / 1000 / 60) % 60);\r\n    const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\r\n    \r\n    if (days > 0) return `${days} day${days !== 1 ? 's' : ''} remaining`;\r\n    if (hours > 0) return `${hours} hour${hours !== 1 ? 's' : ''} remaining`;\r\n    if (minutes > 0) return `${minutes} minute${minutes !== 1 ? 's' : ''} remaining`;\r\n    return `${seconds} second${seconds !== 1 ? 's' : ''} remaining`;\r\n  };\r\n  \r\n  const renderPolls = () => {\r\n    const polls = activeTab === \"ongoing\" ? ongoingPolls : pastPolls;\r\n    \r\n    if (loading && polls.length === 0) {\r\n      return <div className=\"loading\">Loading polls...</div>;\r\n    }\r\n    \r\n    if (polls.length === 0) {\r\n      return <div>No {activeTab} polls found.</div>;\r\n    }\r\n    \r\n    return (\r\n      <div className=\"polls-list\">\r\n        <h3>{activeTab === \"ongoing\" ? \"Ongoing\" : \"Past\"} Polls</h3>\r\n        {polls.map(poll => (\r\n          <div key={poll.id} className={`poll-item ${poll.status}`}>\r\n            <div className=\"poll-info\">\r\n              <h4>{poll.title}</h4>\r\n              <p className=\"poll-description\">{poll.description}</p>\r\n              <div className=\"poll-question\">{poll.question}</div>\r\n              <div className=\"poll-dates\">\r\n                <span>Start: {formatDate(poll.start_date)}</span>\r\n                <span>End: {formatDate(poll.end_date)}</span>\r\n                {activeTab === \"ongoing\" && \r\n                  <span>{getTimeRemaining(poll.end_date)}</span>\r\n                }\r\n              </div>\r\n              {poll.vote_count !== undefined && \r\n                <div className=\"vote-count\">{poll.vote_count} vote{poll.vote_count !== 1 ? 's' : ''}</div>\r\n              }\r\n              {poll.hasVoted && \r\n                <div className=\"badge-voted\">Voted</div>\r\n              }\r\n            </div>\r\n            <div className=\"poll-actions\">\r\n              {activeTab === \"ongoing\" && !poll.hasVoted ? (\r\n                <button \r\n                  className=\"vote-btn\"\r\n                  onClick={() => viewPoll(poll.id)}\r\n                >\r\n                  Vote Now\r\n                </button>\r\n              ) : (\r\n                <button \r\n                  className=\"view-results-btn\"\r\n                  onClick={() => viewPoll(poll.id)}\r\n                >\r\n                  View {poll.hasVoted ? \"Results\" : \"Details\"}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <div className=\"voter-dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h2>Voter Dashboard</h2>\r\n        <div className=\"user-info\">\r\n          <span>Welcome, {user?.name || 'Voter'}</span>\r\n          <button className=\"logout-btn\" onClick={logout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {error && (\r\n        <div className=\"error-message\" onClick={() => setError(null)}>\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"dashboard-actions\">\r\n        <button \r\n          className=\"refresh-btn\"\r\n          onClick={fetchPolls}\r\n        >\r\n          Refresh Polls\r\n        </button>\r\n        <button \r\n          className=\"debug-btn\"\r\n          onClick={fetchPollsDebug}\r\n        >\r\n          Debug Fetch\r\n        </button>\r\n        <button \r\n          className=\"direct-fetch-btn\"\r\n          onClick={fetchPollsDirectly}\r\n        >\r\n          Direct Fetch\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"poll-status\">\r\n        {loading ? \"Loading polls...\" : \r\n          `${ongoingPolls.length} ongoing poll(s), ${pastPolls.length} past poll(s)`}\r\n      </div>\r\n      \r\n      {debugInfo && (\r\n        <div className=\"debug-info\">\r\n          <h4>Debug Info:</h4>\r\n          <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"polls-tabs\">\r\n        <div className=\"tabs-header\">\r\n          <button\r\n            className={activeTab === \"ongoing\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"ongoing\")}\r\n          >\r\n            Ongoing Polls\r\n          </button>\r\n          <button\r\n            className={activeTab === \"past\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"past\")}\r\n          >\r\n            Past Polls\r\n          </button>\r\n        </div>\r\n        \r\n        {renderPolls()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoterDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAOC,GAAG,IAAIC,KAAK,EAAEC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,IAAI;IAAEC,MAAM;IAAEC;EAAW,CAAC,GAAGV,OAAO,CAAC,CAAC;EAC9C,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,MAAM0B,SAAS,GAAGd,UAAU,CAAC,CAAC;IAC9Be,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEF,SAAS,CAACG,KAAK,GAAG,cAAc,GAAG,UAAU,CAAC;IACpG,IAAI,CAACH,SAAS,CAACG,KAAK,EAAE;MACpBN,QAAQ,CAAC,4CAA4C,CAAC;IACxD;EACF,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAEhB,MAAMkB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACFH,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5C,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,CAAC;MAC7E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEK,IAAI,CAAC;MAChCR,YAAY,CAACQ,IAAI,CAAC;MAElB,IAAIA,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;QACvCnB,eAAe,CAACgB,IAAI,CAACE,KAAK,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZV,OAAO,CAACL,KAAK,CAAC,oBAAoB,EAAEe,GAAG,CAAC;MACxCd,QAAQ,CAAC,gBAAgBc,GAAG,CAACC,OAAO,EAAE,CAAC;IACzC;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACFlB,UAAU,CAAC,IAAI,CAAC;MAChBM,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;;MAEjD;MACA,MAAMF,SAAS,GAAGd,UAAU,CAAC,CAAC;MAC9B,IAAI,CAACc,SAAS,CAACG,KAAK,EAAE;QACpBN,QAAQ,CAAC,mCAAmC,CAAC;QAC7CF,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEA,MAAMmB,OAAO,GAAG;QACd,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUd,SAAS,CAACG,KAAK;MAC5C,CAAC;MAEDF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEY,OAAO,CAAC;MAEtC,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtES,MAAM,EAAE,KAAK;QACbD,OAAO,EAAEA;MACX,CAAC,CAAC;MAEF,IAAI,CAACT,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,cAAcZ,QAAQ,CAACa,MAAM,KAAK,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC,EAAE,CAAC;MAC5E;MAEA,MAAMZ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEK,IAAI,CAAC;MAE3C,IAAIa,KAAK,CAACC,OAAO,CAACd,IAAI,CAAC,EAAE;QACvBhB,eAAe,CAACgB,IAAI,CAAC;QACrBN,OAAO,CAACC,GAAG,CAAC,oBAAoBK,IAAI,CAACG,MAAM,gBAAgB,CAAC;MAC9D,CAAC,MAAM;QACLT,OAAO,CAACL,KAAK,CAAC,6BAA6B,EAAEW,IAAI,CAAC;QAClDV,QAAQ,CAAC,4BAA4B,CAAC;MACxC;IACF,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZV,OAAO,CAACL,KAAK,CAAC,qBAAqB,EAAEe,GAAG,CAAC;MACzCd,QAAQ,CAAC,gBAAgBc,GAAG,CAACC,OAAO,EAAE,CAAC;IACzC,CAAC,SAAS;MACRjB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM2B,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF3B,UAAU,CAAC,IAAI,CAAC;MAChBM,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;MAC5DD,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;;MAEpD;MACA,MAAMF,SAAS,GAAGd,UAAU,CAAC,CAAC;MAE9B,MAAMqC,UAAU,GAAG,MAAM7C,KAAK,CAAC8C,UAAU,CAAC,CAAC;MAC3CvB,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEqB,UAAU,CAAC;MAC3DtB,OAAO,CAACC,GAAG,CAAC,YAAYqB,UAAU,CAACb,MAAM,gBAAgB,CAAC;MAE1D,MAAMe,OAAO,GAAG,MAAM/C,KAAK,CAACgD,OAAO,CAAC,CAAC;MACrCzB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEuB,OAAO,CAAC;MACrDxB,OAAO,CAACC,GAAG,CAAC,YAAYuB,OAAO,CAACf,MAAM,aAAa,CAAC;;MAEpD;MACA,MAAMiB,YAAY,GAAG,MAAMhD,KAAK,CAACiD,YAAY,CAAC,CAAC;MAC/C3B,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEyB,YAAY,CAAC;MACxC,MAAME,gBAAgB,GAAG,IAAIC,GAAG,CAACH,YAAY,CAACI,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC,CAAC;;MAExE;MACA,MAAMC,cAAc,GAAIzB,KAAK,IAAK;QAChC,OAAOA,KAAK,CAACsB,GAAG,CAACI,IAAI,KAAK;UACxB,GAAGA,IAAI;UACPC,QAAQ,EAAEP,gBAAgB,CAACQ,GAAG,CAACF,IAAI,CAACG,EAAE;QACxC,CAAC,CAAC,CAAC;MACL,CAAC;MAED/C,eAAe,CAAC2C,cAAc,CAACX,UAAU,CAAC,CAAC;MAC3C9B,YAAY,CAACyC,cAAc,CAACT,OAAO,CAAC,CAAC;IACvC,CAAC,CAAC,OAAOd,GAAG,EAAE;MACZV,OAAO,CAACL,KAAK,CAAC,uBAAuB,EAAEe,GAAG,CAAC;MAC3Cd,QAAQ,CAAC,+CAA+C,CAAC;IAC3D,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACdgD,UAAU,CAAC,CAAC;IACZ;IACA,MAAMiB,UAAU,GAAGC,WAAW,CAAClB,UAAU,EAAE,KAAK,CAAC;IACjD,OAAO,MAAMmB,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,QAAQ,GAAIC,MAAM,IAAK;IAC3BxD,QAAQ,CAAC,UAAUwD,MAAM,EAAE,CAAC;EAC9B,CAAC;EAED,MAAMC,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI,CAACA,UAAU,EAAE,OAAO,SAAS;IAEjC,MAAMC,OAAO,GAAG;MACdC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC;IAED,IAAI;MACF,OAAO,IAAIC,IAAI,CAACP,UAAU,CAAC,CAACQ,kBAAkB,CAACC,SAAS,EAAER,OAAO,CAAC;IACpE,CAAC,CAAC,OAAOnC,GAAG,EAAE;MACZV,OAAO,CAACL,KAAK,CAAC,wBAAwB,EAAEe,GAAG,CAAC;MAC5C,OAAO,cAAc;IACvB;EACF,CAAC;;EAED;EACA,MAAM4C,gBAAgB,GAAIC,OAAO,IAAK;IACpC;IACA,IAAI,CAACA,OAAO,EAAE,OAAO,aAAa;IAElC,MAAMC,KAAK,GAAGL,IAAI,CAACM,KAAK,CAACF,OAAO,CAAC,GAAGJ,IAAI,CAACM,KAAK,CAAC,IAAIN,IAAI,CAAC,CAAC,CAAC;IAC1D,IAAIK,KAAK,IAAI,CAAC,EAAE,OAAO,OAAO;IAE9B,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAEJ,KAAK,GAAG,IAAI,GAAI,EAAE,CAAC;IAC/C,MAAMK,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEJ,KAAK,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;IACpD,MAAMM,KAAK,GAAGH,IAAI,CAACC,KAAK,CAAEJ,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;IACzD,MAAMO,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACJ,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAEtD,IAAIO,IAAI,GAAG,CAAC,EAAE,OAAO,GAAGA,IAAI,OAAOA,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,YAAY;IACpE,IAAID,KAAK,GAAG,CAAC,EAAE,OAAO,GAAGA,KAAK,QAAQA,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,YAAY;IACxE,IAAID,OAAO,GAAG,CAAC,EAAE,OAAO,GAAGA,OAAO,UAAUA,OAAO,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,YAAY;IAChF,OAAO,GAAGH,OAAO,UAAUA,OAAO,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,YAAY;EACjE,CAAC;EAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMxD,KAAK,GAAGrB,SAAS,KAAK,SAAS,GAAGE,YAAY,GAAGE,SAAS;IAEhE,IAAIE,OAAO,IAAIe,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACjC,oBAAO7B,OAAA;QAAKqF,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IACxD;IAEA,IAAI9D,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACtB,oBAAO7B,OAAA;QAAAsF,QAAA,GAAK,KAAG,EAAC/E,SAAS,EAAC,eAAa;MAAA;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAC/C;IAEA,oBACE1F,OAAA;MAAKqF,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBtF,OAAA;QAAAsF,QAAA,GAAK/E,SAAS,KAAK,SAAS,GAAG,SAAS,GAAG,MAAM,EAAC,QAAM;MAAA;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC5D9D,KAAK,CAACsB,GAAG,CAACI,IAAI,iBACbtD,OAAA;QAAmBqF,SAAS,EAAE,aAAa/B,IAAI,CAACjB,MAAM,EAAG;QAAAiD,QAAA,gBACvDtF,OAAA;UAAKqF,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtF,OAAA;YAAAsF,QAAA,EAAKhC,IAAI,CAACqC;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrB1F,OAAA;YAAGqF,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAEhC,IAAI,CAACsC;UAAW;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtD1F,OAAA;YAAKqF,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEhC,IAAI,CAACuC;UAAQ;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpD1F,OAAA;YAAKqF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBtF,OAAA;cAAAsF,QAAA,GAAM,SAAO,EAACvB,UAAU,CAACT,IAAI,CAACwC,UAAU,CAAC;YAAA;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjD1F,OAAA;cAAAsF,QAAA,GAAM,OAAK,EAACvB,UAAU,CAACT,IAAI,CAACyC,QAAQ,CAAC;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAC5CnF,SAAS,KAAK,SAAS,iBACtBP,OAAA;cAAAsF,QAAA,EAAOZ,gBAAgB,CAACpB,IAAI,CAACyC,QAAQ;YAAC;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE7C,CAAC,EACLpC,IAAI,CAAC0C,UAAU,KAAKvB,SAAS,iBAC5BzE,OAAA;YAAKqF,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAEhC,IAAI,CAAC0C,UAAU,EAAC,OAAK,EAAC1C,IAAI,CAAC0C,UAAU,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAE3FpC,IAAI,CAACC,QAAQ,iBACZvD,OAAA;YAAKqF,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEvC,CAAC,eACN1F,OAAA;UAAKqF,SAAS,EAAC,cAAc;UAAAC,QAAA,EAC1B/E,SAAS,KAAK,SAAS,IAAI,CAAC+C,IAAI,CAACC,QAAQ,gBACxCvD,OAAA;YACEqF,SAAS,EAAC,UAAU;YACpBY,OAAO,EAAEA,CAAA,KAAMpC,QAAQ,CAACP,IAAI,CAACG,EAAE,CAAE;YAAA6B,QAAA,EAClC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAET1F,OAAA;YACEqF,SAAS,EAAC,kBAAkB;YAC5BY,OAAO,EAAEA,CAAA,KAAMpC,QAAQ,CAACP,IAAI,CAACG,EAAE,CAAE;YAAA6B,QAAA,GAClC,OACM,EAAChC,IAAI,CAACC,QAAQ,GAAG,SAAS,GAAG,SAAS;UAAA;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC;QACT;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA,GAnCEpC,IAAI,CAACG,EAAE;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoCZ,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;EAED,oBACE1F,OAAA;IAAKqF,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BtF,OAAA;MAAKqF,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BtF,OAAA;QAAAsF,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB1F,OAAA;QAAKqF,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBtF,OAAA;UAAAsF,QAAA,GAAM,WAAS,EAAC,CAAAnF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE+F,IAAI,KAAI,OAAO;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7C1F,OAAA;UAAQqF,SAAS,EAAC,YAAY;UAACY,OAAO,EAAE7F,MAAO;UAAAkF,QAAA,EAAC;QAEhD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEL3E,KAAK,iBACJf,OAAA;MAAKqF,SAAS,EAAC,eAAe;MAACY,OAAO,EAAEA,CAAA,KAAMjF,QAAQ,CAAC,IAAI,CAAE;MAAAsE,QAAA,EAC1DvE;IAAK;MAAAwE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAED1F,OAAA;MAAKqF,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCtF,OAAA;QACEqF,SAAS,EAAC,aAAa;QACvBY,OAAO,EAAExD,UAAW;QAAA6C,QAAA,EACrB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT1F,OAAA;QACEqF,SAAS,EAAC,WAAW;QACrBY,OAAO,EAAE1E,eAAgB;QAAA+D,QAAA,EAC1B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT1F,OAAA;QACEqF,SAAS,EAAC,kBAAkB;QAC5BY,OAAO,EAAEjE,kBAAmB;QAAAsD,QAAA,EAC7B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN1F,OAAA;MAAKqF,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBzE,OAAO,GAAG,kBAAkB,GAC3B,GAAGJ,YAAY,CAACoB,MAAM,qBAAqBlB,SAAS,CAACkB,MAAM;IAAe;MAAA0D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,EAELzE,SAAS,iBACRjB,OAAA;MAAKqF,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBtF,OAAA;QAAAsF,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpB1F,OAAA;QAAAsF,QAAA,EAAMa,IAAI,CAACC,SAAS,CAACnF,SAAS,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAsE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CACN,eAED1F,OAAA;MAAKqF,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBtF,OAAA;QAAKqF,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BtF,OAAA;UACEqF,SAAS,EAAE9E,SAAS,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAG;UACnD0F,OAAO,EAAEA,CAAA,KAAMzF,YAAY,CAAC,SAAS,CAAE;UAAA8E,QAAA,EACxC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1F,OAAA;UACEqF,SAAS,EAAE9E,SAAS,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAG;UAChD0F,OAAO,EAAEA,CAAA,KAAMzF,YAAY,CAAC,MAAM,CAAE;UAAA8E,QAAA,EACrC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELN,WAAW,CAAC,CAAC;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxF,EAAA,CA7SID,cAAc;EAAA,QACmBN,OAAO,EAC3BD,WAAW;AAAA;AAAA2G,EAAA,GAFxBpG,cAAc;AA+SpB,eAAeA,cAAc;AAAC,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}