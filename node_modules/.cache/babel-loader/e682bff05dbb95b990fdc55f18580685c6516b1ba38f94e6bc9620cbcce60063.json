{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\voting-system\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../context/AuthContext\";\nimport api, { Polls } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [activeTab, setActiveTab] = useState(\"ongoing\");\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [ongoingPolls, setOngoingPolls] = useState([]);\n  const [pastPolls, setPastPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  // Poll form state\n  const [pollTitle, setPollTitle] = useState(\"\");\n  const [pollDescription, setPollDescription] = useState(\"\");\n  const [pollQuestion, setPollQuestion] = useState(\"\");\n  const [pollOptions, setPollOptions] = useState([\"\", \"\"]);\n  const fetchPolls = async () => {\n    setLoading(true);\n    setError(null);\n    console.log(\"==============================================\");\n    console.log(\"Starting poll fetch (AdminDashboard)\");\n    try {\n      console.log(\"Fetching ongoing polls...\");\n      const ongoingRes = await Polls.getOngoing();\n      console.log(\"Ongoing polls received:\", ongoingRes);\n      console.log(`Received ${ongoingRes.length} ongoing polls`);\n      const pastRes = await Polls.getPast();\n      console.log(\"Past polls received:\", pastRes);\n      console.log(`Received ${pastRes.length} past polls`);\n      setOngoingPolls(ongoingRes);\n      setPastPolls(pastRes);\n\n      // Immediately after creating a poll, fetch again to ensure we have the latest data\n      console.log(\"Polls fetched successfully - ongoing:\", ongoingRes.length, \"past:\", pastRes.length);\n    } catch (err) {\n      console.error(\"Error fetching polls:\", err);\n      setError(\"Failed to load polls. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPolls();\n    // Poll for updates every minute\n    const intervalId = setInterval(fetchPolls, 60000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const handleCreatePoll = async e => {\n    e.preventDefault();\n\n    // Validate form\n    if (pollTitle.trim().length < 5) {\n      setError(\"Poll title must be at least 5 characters\");\n      return;\n    }\n    if (!pollDescription.trim() || !pollQuestion.trim()) {\n      setError(\"Description and question are required\");\n      return;\n    }\n\n    // Filter out empty options\n    const filteredOptions = pollOptions.filter(opt => opt.trim() !== \"\");\n    if (filteredOptions.length < 2) {\n      setError(\"At least 2 options are required\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const pollData = {\n      title: pollTitle,\n      description: pollDescription,\n      question: pollQuestion,\n      options: filteredOptions\n    };\n    console.log(\"==========================================\");\n    console.log(\"Creating poll with data:\", JSON.stringify(pollData, null, 2));\n    try {\n      console.log(\"Calling Polls.create API endpoint\");\n      const response = await Polls.create(pollData);\n      console.log(\"Poll created successfully, server response:\", response);\n      setSuccess(\"Poll created successfully!\");\n\n      // Reset form\n      setPollTitle(\"\");\n      setPollDescription(\"\");\n      setPollQuestion(\"\");\n      setPollOptions([\"\", \"\"]);\n      setShowCreateForm(false);\n\n      // Refresh polls list\n      console.log(\"Refreshing polls list after creation\");\n      fetchPolls();\n    } catch (err) {\n      var _err$response, _err$response2, _err$response3, _err$response3$data;\n      console.error(\"Error creating poll:\", err);\n      console.error(\"Error details:\", {\n        message: err.message,\n        response: err.response,\n        data: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data,\n        status: (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status\n      });\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || err.message || \"Failed to create poll. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleOptionChange = (index, value) => {\n    const newOptions = [...pollOptions];\n    newOptions[index] = value;\n    setPollOptions(newOptions);\n  };\n  const addOption = () => {\n    setPollOptions([...pollOptions, \"\"]);\n  };\n  const removeOption = index => {\n    if (pollOptions.length > 2) {\n      const newOptions = [...pollOptions];\n      newOptions.splice(index, 1);\n      setPollOptions(newOptions);\n    }\n  };\n  const endPoll = async pollId => {\n    try {\n      await Polls.end(pollId);\n      setSuccess(\"Poll ended successfully\");\n      fetchPolls();\n    } catch (err) {\n      setError(\"Failed to end poll\");\n      console.error(err);\n    }\n  };\n\n  // Renders the appropriate polls based on the active tab\n  const renderPolls = () => {\n    let polls = activeTab === \"ongoing\" ? ongoingPolls : pastPolls;\n    if (loading && polls.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading polls...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 14\n      }, this);\n    }\n    if (polls.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"No \", activeTab, \" polls found.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [activeTab.charAt(0).toUpperCase() + activeTab.slice(1), \" Polls\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `poll-item ${poll.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: poll.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"poll-description\",\n            children: poll.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-question\",\n            children: poll.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), poll.vote_count !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vote-count\",\n            children: [poll.vote_count, \" vote\", poll.vote_count !== 1 ? \"s\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-actions\",\n          children: [activeTab === \"ongoing\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"end-poll-btn\",\n            onClick: () => endPoll(poll.id),\n            children: \"End Poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-results-btn\",\n            children: \"View Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, poll.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", (user === null || user === void 0 ? void 0 : user.name) || \"Admin\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      onClick: () => setError(null),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      onClick: () => setSuccess(null),\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-poll-btn\",\n        onClick: () => setShowCreateForm(!showCreateForm),\n        children: showCreateForm ? \"Cancel\" : \"Create New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-btn\",\n        onClick: fetchPolls,\n        children: \"Refresh Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-status\",\n      children: loading ? \"Loading polls...\" : `${ongoingPolls.length} ongoing poll(s), ${pastPolls.length} past poll(s)`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), showCreateForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-poll-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreatePoll,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pollTitle\",\n            children: \"Poll Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"pollTitle\",\n            value: pollTitle,\n            onChange: e => setPollTitle(e.target.value),\n            placeholder: \"Enter poll title (min 5 characters)\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pollDescription\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"pollDescription\",\n            value: pollDescription,\n            onChange: e => setPollDescription(e.target.value),\n            placeholder: \"Enter poll description\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pollQuestion\",\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"pollQuestion\",\n            value: pollQuestion,\n            onChange: e => setPollQuestion(e.target.value),\n            placeholder: \"Enter the question for voters\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Options (at least 2)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), pollOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: option,\n              onChange: e => handleOptionChange(index, e.target.value),\n              placeholder: `Option ${index + 1}`,\n              required: index < 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), index >= 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"remove-option-btn\",\n              onClick: () => removeOption(index),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"add-option-btn\",\n            onClick: addOption,\n            children: \"+ Add Option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-poll-btn\",\n          disabled: loading,\n          children: loading ? \"Creating...\" : \"Create Poll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === \"ongoing\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"ongoing\"),\n          children: \"Ongoing Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === \"past\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"past\"),\n          children: \"Past Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), renderPolls()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"2QDTYmvXD88i/8vebYdsx7zYUfI=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","api","Polls","jsxDEV","_jsxDEV","AdminDashboard","_s","user","logout","activeTab","setActiveTab","showCreateForm","setShowCreateForm","ongoingPolls","setOngoingPolls","pastPolls","setPastPolls","loading","setLoading","error","setError","success","setSuccess","pollTitle","setPollTitle","pollDescription","setPollDescription","pollQuestion","setPollQuestion","pollOptions","setPollOptions","fetchPolls","console","log","ongoingRes","getOngoing","length","pastRes","getPast","err","intervalId","setInterval","clearInterval","handleCreatePoll","e","preventDefault","trim","filteredOptions","filter","opt","pollData","title","description","question","options","JSON","stringify","response","create","_err$response","_err$response2","_err$response3","_err$response3$data","message","data","status","handleOptionChange","index","value","newOptions","addOption","removeOption","splice","endPoll","pollId","end","renderPolls","polls","className","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","map","poll","vote_count","undefined","onClick","id","name","onSubmit","htmlFor","type","onChange","target","placeholder","required","option","disabled","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/voting-system/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport api, { Polls } from \"../services/api\";\r\n\r\nconst AdminDashboard = () => {\r\n  const { user, logout } = useAuth();\r\n  const [activeTab, setActiveTab] = useState(\"ongoing\");\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [ongoingPolls, setOngoingPolls] = useState([]);\r\n  const [pastPolls, setPastPolls] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  \r\n  // Poll form state\r\n  const [pollTitle, setPollTitle] = useState(\"\");\r\n  const [pollDescription, setPollDescription] = useState(\"\");\r\n  const [pollQuestion, setPollQuestion] = useState(\"\");\r\n  const [pollOptions, setPollOptions] = useState([\"\", \"\"]);\r\n\r\n  const fetchPolls = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    console.log(\"==============================================\");\r\n    console.log(\"Starting poll fetch (AdminDashboard)\");\r\n    \r\n    try {\r\n      console.log(\"Fetching ongoing polls...\");\r\n      const ongoingRes = await Polls.getOngoing();\r\n      console.log(\"Ongoing polls received:\", ongoingRes);\r\n      console.log(`Received ${ongoingRes.length} ongoing polls`);\r\n      \r\n      const pastRes = await Polls.getPast();\r\n      console.log(\"Past polls received:\", pastRes);\r\n      console.log(`Received ${pastRes.length} past polls`);\r\n      \r\n      setOngoingPolls(ongoingRes);\r\n      setPastPolls(pastRes);\r\n      \r\n      // Immediately after creating a poll, fetch again to ensure we have the latest data\r\n      console.log(\"Polls fetched successfully - ongoing:\", ongoingRes.length, \"past:\", pastRes.length);\r\n    } catch (err) {\r\n      console.error(\"Error fetching polls:\", err);\r\n      setError(\"Failed to load polls. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPolls();\r\n    // Poll for updates every minute\r\n    const intervalId = setInterval(fetchPolls, 60000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const handleCreatePoll = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate form\r\n    if (pollTitle.trim().length < 5) {\r\n      setError(\"Poll title must be at least 5 characters\");\r\n      return;\r\n    }\r\n    \r\n    if (!pollDescription.trim() || !pollQuestion.trim()) {\r\n      setError(\"Description and question are required\");\r\n      return;\r\n    }\r\n    \r\n    // Filter out empty options\r\n    const filteredOptions = pollOptions.filter(opt => opt.trim() !== \"\");\r\n    if (filteredOptions.length < 2) {\r\n      setError(\"At least 2 options are required\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    const pollData = {\r\n      title: pollTitle,\r\n      description: pollDescription,\r\n      question: pollQuestion,\r\n      options: filteredOptions\r\n    };\r\n    \r\n    console.log(\"==========================================\");\r\n    console.log(\"Creating poll with data:\", JSON.stringify(pollData, null, 2));\r\n    \r\n    try {\r\n      console.log(\"Calling Polls.create API endpoint\");\r\n      const response = await Polls.create(pollData);\r\n      console.log(\"Poll created successfully, server response:\", response);\r\n      setSuccess(\"Poll created successfully!\");\r\n      \r\n      // Reset form\r\n      setPollTitle(\"\");\r\n      setPollDescription(\"\");\r\n      setPollQuestion(\"\");\r\n      setPollOptions([\"\", \"\"]);\r\n      setShowCreateForm(false);\r\n      \r\n      // Refresh polls list\r\n      console.log(\"Refreshing polls list after creation\");\r\n      fetchPolls();\r\n    } catch (err) {\r\n      console.error(\"Error creating poll:\", err);\r\n      console.error(\"Error details:\", {\r\n        message: err.message,\r\n        response: err.response,\r\n        data: err.response?.data,\r\n        status: err.response?.status\r\n      });\r\n      setError(err.response?.data?.error || err.message || \"Failed to create poll. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOptionChange = (index, value) => {\r\n    const newOptions = [...pollOptions];\r\n    newOptions[index] = value;\r\n    setPollOptions(newOptions);\r\n  };\r\n\r\n  const addOption = () => {\r\n    setPollOptions([...pollOptions, \"\"]);\r\n  };\r\n\r\n  const removeOption = (index) => {\r\n    if (pollOptions.length > 2) {\r\n      const newOptions = [...pollOptions];\r\n      newOptions.splice(index, 1);\r\n      setPollOptions(newOptions);\r\n    }\r\n  };\r\n\r\n  const endPoll = async (pollId) => {\r\n    try {\r\n      await Polls.end(pollId);\r\n      setSuccess(\"Poll ended successfully\");\r\n      fetchPolls();\r\n    } catch (err) {\r\n      setError(\"Failed to end poll\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Renders the appropriate polls based on the active tab\r\n  const renderPolls = () => {\r\n    let polls = activeTab === \"ongoing\" ? ongoingPolls : pastPolls;\r\n    \r\n    if (loading && polls.length === 0) {\r\n      return <div className=\"loading\">Loading polls...</div>;\r\n    }\r\n    \r\n    if (polls.length === 0) {\r\n      return <div>No {activeTab} polls found.</div>;\r\n    }\r\n    \r\n    return (\r\n      <div className=\"polls-list\">\r\n        <h3>{activeTab.charAt(0).toUpperCase() + activeTab.slice(1)} Polls</h3>\r\n        {polls.map(poll => (\r\n          <div key={poll.id} className={`poll-item ${poll.status}`}>\r\n            <div className=\"poll-info\">\r\n              <h4>{poll.title}</h4>\r\n              <p className=\"poll-description\">{poll.description}</p>\r\n              <div className=\"poll-question\">{poll.question}</div>\r\n              {poll.vote_count !== undefined && \r\n                <div className=\"vote-count\">{poll.vote_count} vote{poll.vote_count !== 1 ? \"s\" : \"\"}</div>\r\n              }\r\n            </div>\r\n            <div className=\"poll-actions\">\r\n              {activeTab === \"ongoing\" && (\r\n                <button \r\n                  className=\"end-poll-btn\"\r\n                  onClick={() => endPoll(poll.id)}\r\n                >\r\n                  End Poll\r\n                </button>\r\n              )}\r\n              <button className=\"view-results-btn\">\r\n                View Results\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h2>Admin Dashboard</h2>\r\n        <div className=\"user-info\">\r\n          <span>Welcome, {user?.name || \"Admin\"}</span>\r\n          <button className=\"logout-btn\" onClick={logout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\" onClick={() => setError(null)}>\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      {success && (\r\n        <div className=\"success-message\" onClick={() => setSuccess(null)}>\r\n          {success}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"admin-actions\">\r\n        <button \r\n          className=\"create-poll-btn\"\r\n          onClick={() => setShowCreateForm(!showCreateForm)}\r\n        >\r\n          {showCreateForm ? \"Cancel\" : \"Create New Poll\"}\r\n        </button>\r\n        <button \r\n          className=\"refresh-btn\"\r\n          onClick={fetchPolls}\r\n        >\r\n          Refresh Polls\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"poll-status\">\r\n        {loading ? \"Loading polls...\" : \r\n          `${ongoingPolls.length} ongoing poll(s), ${pastPolls.length} past poll(s)`}\r\n      </div>\r\n\r\n      {showCreateForm && (\r\n        <div className=\"create-poll-form\">\r\n          <h3>Create New Poll</h3>\r\n          <form onSubmit={handleCreatePoll}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"pollTitle\">Poll Title</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"pollTitle\"\r\n                value={pollTitle}\r\n                onChange={(e) => setPollTitle(e.target.value)}\r\n                placeholder=\"Enter poll title (min 5 characters)\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"pollDescription\">Description</label>\r\n              <textarea\r\n                id=\"pollDescription\"\r\n                value={pollDescription}\r\n                onChange={(e) => setPollDescription(e.target.value)}\r\n                placeholder=\"Enter poll description\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"pollQuestion\">Question</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"pollQuestion\"\r\n                value={pollQuestion}\r\n                onChange={(e) => setPollQuestion(e.target.value)}\r\n                placeholder=\"Enter the question for voters\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label>Options (at least 2)</label>\r\n              {pollOptions.map((option, index) => (\r\n                <div key={index} className=\"option-input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={option}\r\n                    onChange={(e) => handleOptionChange(index, e.target.value)}\r\n                    placeholder={`Option ${index + 1}`}\r\n                    required={index < 2}\r\n                  />\r\n                  {index >= 2 && (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"remove-option-btn\"\r\n                      onClick={() => removeOption(index)}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              ))}\r\n              <button\r\n                type=\"button\"\r\n                className=\"add-option-btn\"\r\n                onClick={addOption}\r\n              >\r\n                + Add Option\r\n              </button>\r\n            </div>\r\n            \r\n            <button type=\"submit\" className=\"submit-poll-btn\" disabled={loading}>\r\n              {loading ? \"Creating...\" : \"Create Poll\"}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"polls-tabs\">\r\n        <div className=\"tabs-header\">\r\n          <button\r\n            className={activeTab === \"ongoing\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"ongoing\")}\r\n          >\r\n            Ongoing Polls\r\n          </button>\r\n          <button\r\n            className={activeTab === \"past\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"past\")}\r\n          >\r\n            Past Polls\r\n          </button>\r\n        </div>\r\n        \r\n        {renderPolls()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}