{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\voting-system\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { pollsAPI } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const [polls, setPolls] = useState([]);\n  const [candidates, setCandidates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showCreateForm, setShowCreateForm] = useState(false);\n\n  // New poll form state\n  const [newPoll, setNewPoll] = useState({\n    title: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    candidates: []\n  });\n\n  // Fetch polls on component mount\n  useEffect(() => {\n    fetchPolls();\n    fetchCandidates();\n  }, []);\n\n  // Fetch all polls\n  const fetchPolls = async () => {\n    try {\n      setLoading(true);\n      const response = await pollsAPI.getOngoingPolls();\n      setPolls(response.data);\n    } catch (err) {\n      console.error(\"Error fetching polls:\", err);\n      setError(\"Failed to load polls. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch candidates for poll creation\n  const fetchCandidates = async () => {\n    try {\n      // This would need a new API endpoint to get all candidates\n      // For now, using dummy data\n      setCandidates([{\n        id: 1,\n        name: \"Candidate 1\"\n      }, {\n        id: 2,\n        name: \"Candidate 2\"\n      }, {\n        id: 3,\n        name: \"Candidate 3\"\n      }]);\n    } catch (err) {\n      console.error(\"Error fetching candidates:\", err);\n    }\n  };\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewPoll({\n      ...newPoll,\n      [name]: value\n    });\n  };\n\n  // Handle candidate selection\n  const handleCandidateSelection = e => {\n    const selectedOptions = Array.from(e.target.selectedOptions, option => parseInt(option.value));\n    setNewPoll({\n      ...newPoll,\n      candidates: selectedOptions\n    });\n  };\n\n  // Create new poll\n  const handleCreatePoll = async e => {\n    e.preventDefault();\n    if (newPoll.candidates.length < 2) {\n      setError(\"Please select at least two candidates\");\n      return;\n    }\n    try {\n      setLoading(true);\n      await pollsAPI.createPoll(newPoll);\n\n      // Reset form and fetch updated polls\n      setNewPoll({\n        title: \"\",\n        description: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        candidates: []\n      });\n      setShowCreateForm(false);\n      fetchPolls();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Error creating poll:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Failed to create poll\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // End a poll\n  const handleEndPoll = async pollId => {\n    if (!window.confirm(\"Are you sure you want to end this poll?\")) {\n      return;\n    }\n    try {\n      setLoading(true);\n      await pollsAPI.endPoll(pollId);\n      fetchPolls();\n    } catch (err) {\n      console.error(\"Error ending poll:\", err);\n      setError(\"Failed to end poll\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // View poll results\n  const viewPollResults = async pollId => {\n    // This would navigate to a results page\n    console.log(\"View results for poll:\", pollId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", currentUser.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreateForm(!showCreateForm),\n        className: \"create-poll-btn\",\n        children: showCreateForm ? \"Cancel\" : \"Create New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), showCreateForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-poll-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreatePoll,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Poll Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            value: newPoll.title,\n            onChange: handleInputChange,\n            required: true,\n            minLength: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            value: newPoll.description,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDate\",\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            id: \"startDate\",\n            name: \"startDate\",\n            value: newPoll.startDate,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"endDate\",\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            id: \"endDate\",\n            name: \"endDate\",\n            value: newPoll.endDate,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"candidates\",\n            children: \"Select Candidates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            id: \"candidates\",\n            name: \"candidates\",\n            value: newPoll.candidates,\n            onChange: handleCandidateSelection,\n            required: true,\n            children: candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: candidate.id,\n              children: candidate.name\n            }, candidate.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Hold Ctrl (or Cmd on Mac) to select multiple candidates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Creating...\" : \"Create Poll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ongoing Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading polls...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this), !loading && polls.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No active polls found. Create one to get started.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: poll.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: poll.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-dates\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Start: \", new Date(poll.start_date).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"End: \", new Date(poll.end_date).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vote-count\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Votes: \", poll.vote_count || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEndPoll(poll.id),\n            className: \"end-poll-btn\",\n            disabled: loading,\n            children: \"End Poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => viewPollResults(poll.id),\n            className: \"view-results-btn\",\n            children: \"View Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, poll.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"WhtUeumqaE8o0y3xZ1Ou27QNL0M=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","pollsAPI","jsxDEV","_jsxDEV","AdminDashboard","_s","currentUser","logout","polls","setPolls","candidates","setCandidates","loading","setLoading","error","setError","showCreateForm","setShowCreateForm","newPoll","setNewPoll","title","description","startDate","endDate","fetchPolls","fetchCandidates","response","getOngoingPolls","data","err","console","id","name","handleInputChange","e","value","target","handleCandidateSelection","selectedOptions","Array","from","option","parseInt","handleCreatePoll","preventDefault","length","createPoll","_err$response","_err$response$data","handleEndPoll","pollId","window","confirm","endPoll","viewPollResults","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","onChange","required","minLength","multiple","map","candidate","disabled","poll","Date","start_date","toLocaleString","end_date","vote_count","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/voting-system/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { pollsAPI } from \"../services/api\";\r\n\r\nconst AdminDashboard = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const [polls, setPolls] = useState([]);\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  \r\n  // New poll form state\r\n  const [newPoll, setNewPoll] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    candidates: []\r\n  });\r\n\r\n  // Fetch polls on component mount\r\n  useEffect(() => {\r\n    fetchPolls();\r\n    fetchCandidates();\r\n  }, []);\r\n\r\n  // Fetch all polls\r\n  const fetchPolls = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await pollsAPI.getOngoingPolls();\r\n      setPolls(response.data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching polls:\", err);\r\n      setError(\"Failed to load polls. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch candidates for poll creation\r\n  const fetchCandidates = async () => {\r\n    try {\r\n      // This would need a new API endpoint to get all candidates\r\n      // For now, using dummy data\r\n      setCandidates([\r\n        { id: 1, name: \"Candidate 1\" },\r\n        { id: 2, name: \"Candidate 2\" },\r\n        { id: 3, name: \"Candidate 3\" },\r\n      ]);\r\n    } catch (err) {\r\n      console.error(\"Error fetching candidates:\", err);\r\n    }\r\n  };\r\n\r\n  // Handle form input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewPoll({ ...newPoll, [name]: value });\r\n  };\r\n\r\n  // Handle candidate selection\r\n  const handleCandidateSelection = (e) => {\r\n    const selectedOptions = Array.from(e.target.selectedOptions, option => parseInt(option.value));\r\n    setNewPoll({ ...newPoll, candidates: selectedOptions });\r\n  };\r\n\r\n  // Create new poll\r\n  const handleCreatePoll = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (newPoll.candidates.length < 2) {\r\n      setError(\"Please select at least two candidates\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      await pollsAPI.createPoll(newPoll);\r\n      \r\n      // Reset form and fetch updated polls\r\n      setNewPoll({\r\n        title: \"\",\r\n        description: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        candidates: []\r\n      });\r\n      setShowCreateForm(false);\r\n      fetchPolls();\r\n    } catch (err) {\r\n      console.error(\"Error creating poll:\", err);\r\n      setError(err.response?.data?.error || \"Failed to create poll\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // End a poll\r\n  const handleEndPoll = async (pollId) => {\r\n    if (!window.confirm(\"Are you sure you want to end this poll?\")) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      await pollsAPI.endPoll(pollId);\r\n      fetchPolls();\r\n    } catch (err) {\r\n      console.error(\"Error ending poll:\", err);\r\n      setError(\"Failed to end poll\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // View poll results\r\n  const viewPollResults = async (pollId) => {\r\n    // This would navigate to a results page\r\n    console.log(\"View results for poll:\", pollId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <h2>Admin Dashboard</h2>\r\n        <div className=\"user-info\">\r\n          <span>Welcome, {currentUser.name}</span>\r\n          <button onClick={logout} className=\"logout-btn\">Logout</button>\r\n        </div>\r\n      </header>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      <div className=\"dashboard-actions\">\r\n        <button \r\n          onClick={() => setShowCreateForm(!showCreateForm)}\r\n          className=\"create-poll-btn\"\r\n        >\r\n          {showCreateForm ? \"Cancel\" : \"Create New Poll\"}\r\n        </button>\r\n      </div>\r\n\r\n      {showCreateForm && (\r\n        <div className=\"create-poll-form\">\r\n          <h3>Create New Poll</h3>\r\n          <form onSubmit={handleCreatePoll}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Poll Title</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={newPoll.title}\r\n                onChange={handleInputChange}\r\n                required\r\n                minLength={5}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={newPoll.description}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"startDate\">Start Date</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                id=\"startDate\"\r\n                name=\"startDate\"\r\n                value={newPoll.startDate}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"endDate\">End Date</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                id=\"endDate\"\r\n                name=\"endDate\"\r\n                value={newPoll.endDate}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"candidates\">Select Candidates</label>\r\n              <select\r\n                multiple\r\n                id=\"candidates\"\r\n                name=\"candidates\"\r\n                value={newPoll.candidates}\r\n                onChange={handleCandidateSelection}\r\n                required\r\n              >\r\n                {candidates.map(candidate => (\r\n                  <option key={candidate.id} value={candidate.id}>\r\n                    {candidate.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <small>Hold Ctrl (or Cmd on Mac) to select multiple candidates</small>\r\n            </div>\r\n\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? \"Creating...\" : \"Create Poll\"}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"polls-list\">\r\n        <h3>Ongoing Polls</h3>\r\n        \r\n        {loading && <p>Loading polls...</p>}\r\n        \r\n        {!loading && polls.length === 0 && (\r\n          <p>No active polls found. Create one to get started.</p>\r\n        )}\r\n\r\n        {polls.map(poll => (\r\n          <div key={poll.id} className=\"poll-item\">\r\n            <div className=\"poll-info\">\r\n              <h4>{poll.title}</h4>\r\n              <p>{poll.description}</p>\r\n              <div className=\"poll-dates\">\r\n                <span>Start: {new Date(poll.start_date).toLocaleString()}</span>\r\n                <span>End: {new Date(poll.end_date).toLocaleString()}</span>\r\n              </div>\r\n              <div className=\"vote-count\">\r\n                <span>Votes: {poll.vote_count || 0}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"poll-actions\">\r\n              <button \r\n                onClick={() => handleEndPoll(poll.id)}\r\n                className=\"end-poll-btn\"\r\n                disabled={loading}\r\n              >\r\n                End Poll\r\n              </button>\r\n              <button \r\n                onClick={() => viewPollResults(poll.id)}\r\n                className=\"view-results-btn\"\r\n              >\r\n                View Results\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}