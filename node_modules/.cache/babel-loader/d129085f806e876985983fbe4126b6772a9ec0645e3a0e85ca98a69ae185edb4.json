{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\voting-system\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { pollsAPI } from \"../services/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const [allPolls, setAllPolls] = useState([]);\n  const [pendingPolls, setPendingPolls] = useState([]);\n  const [ongoingPolls, setOngoingPolls] = useState([]);\n  const [endedPolls, setEndedPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"ongoing\");\n\n  // New poll form state with default candidates\n  const [newPoll, setNewPoll] = useState({\n    title: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    candidates: [1, 2] // Default candidate IDs - assuming these exist in the database\n  });\n\n  // Fetch polls on component mount\n  useEffect(() => {\n    fetchAllPolls();\n  }, []);\n\n  // Fetch all polls\n  const fetchAllPolls = async () => {\n    try {\n      setLoading(true);\n      const response = await pollsAPI.getAllPolls();\n      setAllPolls(response.data);\n\n      // Split polls by status\n      setPendingPolls(response.data.filter(poll => poll.status === \"pending\"));\n      setOngoingPolls(response.data.filter(poll => poll.status === \"ongoing\"));\n      setEndedPolls(response.data.filter(poll => poll.status === \"ended\").slice(0, 3));\n    } catch (err) {\n      console.error(\"Error fetching polls:\", err);\n      setError(\"Failed to load polls. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewPoll({\n      ...newPoll,\n      [name]: value\n    });\n  };\n\n  // Create new poll\n  const handleCreatePoll = async e => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      await pollsAPI.createPoll(newPoll);\n\n      // Reset form and fetch updated polls\n      setNewPoll({\n        title: \"\",\n        description: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        candidates: [1, 2] // Reset to default candidate IDs\n      });\n      setShowCreateForm(false);\n      fetchAllPolls();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Error creating poll:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Failed to create poll\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Start a poll\n  const handleStartPoll = async pollId => {\n    if (!window.confirm(\"Are you sure you want to start this poll?\")) {\n      return;\n    }\n    try {\n      setLoading(true);\n      await pollsAPI.startPoll(pollId);\n      fetchAllPolls();\n    } catch (err) {\n      console.error(\"Error starting poll:\", err);\n      setError(\"Failed to start poll\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // End a poll\n  const handleEndPoll = async pollId => {\n    if (!window.confirm(\"Are you sure you want to end this poll?\")) {\n      return;\n    }\n    try {\n      setLoading(true);\n      await pollsAPI.endPoll(pollId);\n      fetchAllPolls();\n    } catch (err) {\n      console.error(\"Error ending poll:\", err);\n      setError(\"Failed to end poll\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // View poll results\n  const viewPollResults = async pollId => {\n    // This would navigate to a results page\n    console.log(\"View results for poll:\", pollId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", currentUser.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreateForm(!showCreateForm),\n        className: \"create-poll-btn\",\n        children: showCreateForm ? \"Cancel\" : \"Create New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), showCreateForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-poll-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreatePoll,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Poll Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            value: newPoll.title,\n            onChange: handleInputChange,\n            required: true,\n            minLength: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            value: newPoll.description,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDate\",\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            id: \"startDate\",\n            name: \"startDate\",\n            value: newPoll.startDate,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"endDate\",\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            id: \"endDate\",\n            name: \"endDate\",\n            value: newPoll.endDate,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Creating...\" : \"Create Poll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === \"ongoing\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"ongoing\"),\n          children: \"Ongoing Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === \"pending\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"pending\"),\n          children: \"Pending Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === \"ended\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"ended\"),\n          children: \"Recent Ended Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"polls-list\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading polls...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 23\n        }, this), !loading && activeTab === \"pending\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Pending Polls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), pendingPolls.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No pending polls found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this) : pendingPolls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poll-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: poll.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: poll.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"poll-dates\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Start: \", new Date(poll.start_date).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"End: \", new Date(poll.end_date).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poll-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleStartPoll(poll.id),\n                className: \"start-poll-btn\",\n                disabled: loading,\n                children: \"Start Poll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this)]\n          }, poll.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true), !loading && activeTab === \"ongoing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ongoing Polls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), ongoingPolls.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No ongoing polls found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this) : ongoingPolls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poll-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: poll.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: poll.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"poll-dates\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Start: \", new Date(poll.start_date).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"End: \", new Date(poll.end_date).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-count\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Votes: \", poll.vote_count || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poll-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEndPoll(poll.id),\n                className: \"end-poll-btn\",\n                disabled: loading,\n                children: \"End Poll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => viewPollResults(poll.id),\n                className: \"view-results-btn\",\n                children: \"View Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 21\n            }, this)]\n          }, poll.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true), !loading && activeTab === \"ended\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recent Ended Polls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), endedPolls.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No ended polls found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this) : endedPolls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poll-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: poll.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: poll.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"poll-dates\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Start: \", new Date(poll.start_date).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"End: \", new Date(poll.end_date).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-count\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Total Votes: \", poll.vote_count || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poll-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => viewPollResults(poll.id),\n                className: \"view-results-btn\",\n                children: \"View Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 21\n            }, this)]\n          }, poll.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"9V4i0vOuOooMk9ScZJq1KpONAuw=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","pollsAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","currentUser","logout","allPolls","setAllPolls","pendingPolls","setPendingPolls","ongoingPolls","setOngoingPolls","endedPolls","setEndedPolls","loading","setLoading","error","setError","showCreateForm","setShowCreateForm","activeTab","setActiveTab","newPoll","setNewPoll","title","description","startDate","endDate","candidates","fetchAllPolls","response","getAllPolls","data","filter","poll","status","slice","err","console","handleInputChange","e","name","value","target","handleCreatePoll","preventDefault","createPoll","_err$response","_err$response$data","handleStartPoll","pollId","window","confirm","startPoll","handleEndPoll","endPoll","viewPollResults","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","onChange","required","minLength","disabled","length","map","Date","start_date","toLocaleString","end_date","vote_count","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/voting-system/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { pollsAPI } from \"../services/api\";\r\n\r\nconst AdminDashboard = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const [allPolls, setAllPolls] = useState([]);\r\n  const [pendingPolls, setPendingPolls] = useState([]);\r\n  const [ongoingPolls, setOngoingPolls] = useState([]);\r\n  const [endedPolls, setEndedPolls] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"ongoing\");\r\n  \r\n  // New poll form state with default candidates\r\n  const [newPoll, setNewPoll] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    candidates: [1, 2] // Default candidate IDs - assuming these exist in the database\r\n  });\r\n\r\n  // Fetch polls on component mount\r\n  useEffect(() => {\r\n    fetchAllPolls();\r\n  }, []);\r\n\r\n  // Fetch all polls\r\n  const fetchAllPolls = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await pollsAPI.getAllPolls();\r\n      setAllPolls(response.data);\r\n      \r\n      // Split polls by status\r\n      setPendingPolls(response.data.filter(poll => poll.status === \"pending\"));\r\n      setOngoingPolls(response.data.filter(poll => poll.status === \"ongoing\"));\r\n      setEndedPolls(response.data.filter(poll => poll.status === \"ended\").slice(0, 3));\r\n    } catch (err) {\r\n      console.error(\"Error fetching polls:\", err);\r\n      setError(\"Failed to load polls. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle form input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewPoll({ ...newPoll, [name]: value });\r\n  };\r\n\r\n  // Create new poll\r\n  const handleCreatePoll = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      setLoading(true);\r\n      await pollsAPI.createPoll(newPoll);\r\n      \r\n      // Reset form and fetch updated polls\r\n      setNewPoll({\r\n        title: \"\",\r\n        description: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        candidates: [1, 2] // Reset to default candidate IDs\r\n      });\r\n      setShowCreateForm(false);\r\n      fetchAllPolls();\r\n    } catch (err) {\r\n      console.error(\"Error creating poll:\", err);\r\n      setError(err.response?.data?.error || \"Failed to create poll\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Start a poll\r\n  const handleStartPoll = async (pollId) => {\r\n    if (!window.confirm(\"Are you sure you want to start this poll?\")) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      await pollsAPI.startPoll(pollId);\r\n      fetchAllPolls();\r\n    } catch (err) {\r\n      console.error(\"Error starting poll:\", err);\r\n      setError(\"Failed to start poll\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // End a poll\r\n  const handleEndPoll = async (pollId) => {\r\n    if (!window.confirm(\"Are you sure you want to end this poll?\")) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      await pollsAPI.endPoll(pollId);\r\n      fetchAllPolls();\r\n    } catch (err) {\r\n      console.error(\"Error ending poll:\", err);\r\n      setError(\"Failed to end poll\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // View poll results\r\n  const viewPollResults = async (pollId) => {\r\n    // This would navigate to a results page\r\n    console.log(\"View results for poll:\", pollId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <h2>Admin Dashboard</h2>\r\n        <div className=\"user-info\">\r\n          <span>Welcome, {currentUser.name}</span>\r\n          <button onClick={logout} className=\"logout-btn\">Logout</button>\r\n        </div>\r\n      </header>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      <div className=\"dashboard-actions\">\r\n        <button \r\n          onClick={() => setShowCreateForm(!showCreateForm)}\r\n          className=\"create-poll-btn\"\r\n        >\r\n          {showCreateForm ? \"Cancel\" : \"Create New Poll\"}\r\n        </button>\r\n      </div>\r\n\r\n      {showCreateForm && (\r\n        <div className=\"create-poll-form\">\r\n          <h3>Create New Poll</h3>\r\n          <form onSubmit={handleCreatePoll}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Poll Title</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={newPoll.title}\r\n                onChange={handleInputChange}\r\n                required\r\n                minLength={5}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={newPoll.description}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"startDate\">Start Date</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                id=\"startDate\"\r\n                name=\"startDate\"\r\n                value={newPoll.startDate}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"endDate\">End Date</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                id=\"endDate\"\r\n                name=\"endDate\"\r\n                value={newPoll.endDate}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? \"Creating...\" : \"Create Poll\"}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"polls-tabs\">\r\n        <div className=\"tabs-header\">\r\n          <button \r\n            className={activeTab === \"ongoing\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"ongoing\")}\r\n          >\r\n            Ongoing Polls\r\n          </button>\r\n          <button \r\n            className={activeTab === \"pending\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"pending\")}\r\n          >\r\n            Pending Polls\r\n          </button>\r\n          <button \r\n            className={activeTab === \"ended\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"ended\")}\r\n          >\r\n            Recent Ended Polls\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"polls-list\">\r\n          {loading && <p>Loading polls...</p>}\r\n          \r\n          {!loading && activeTab === \"pending\" && (\r\n            <>\r\n              <h3>Pending Polls</h3>\r\n              {pendingPolls.length === 0 ? (\r\n                <p>No pending polls found.</p>\r\n              ) : (\r\n                pendingPolls.map(poll => (\r\n                  <div key={poll.id} className=\"poll-item\">\r\n                    <div className=\"poll-info\">\r\n                      <h4>{poll.title}</h4>\r\n                      <p>{poll.description}</p>\r\n                      <div className=\"poll-dates\">\r\n                        <span>Start: {new Date(poll.start_date).toLocaleString()}</span>\r\n                        <span>End: {new Date(poll.end_date).toLocaleString()}</span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"poll-actions\">\r\n                      <button \r\n                        onClick={() => handleStartPoll(poll.id)}\r\n                        className=\"start-poll-btn\"\r\n                        disabled={loading}\r\n                      >\r\n                        Start Poll\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </>\r\n          )}\r\n          \r\n          {!loading && activeTab === \"ongoing\" && (\r\n            <>\r\n              <h3>Ongoing Polls</h3>\r\n              {ongoingPolls.length === 0 ? (\r\n                <p>No ongoing polls found.</p>\r\n              ) : (\r\n                ongoingPolls.map(poll => (\r\n                  <div key={poll.id} className=\"poll-item\">\r\n                    <div className=\"poll-info\">\r\n                      <h4>{poll.title}</h4>\r\n                      <p>{poll.description}</p>\r\n                      <div className=\"poll-dates\">\r\n                        <span>Start: {new Date(poll.start_date).toLocaleString()}</span>\r\n                        <span>End: {new Date(poll.end_date).toLocaleString()}</span>\r\n                      </div>\r\n                      <div className=\"vote-count\">\r\n                        <span>Votes: {poll.vote_count || 0}</span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"poll-actions\">\r\n                      <button \r\n                        onClick={() => handleEndPoll(poll.id)}\r\n                        className=\"end-poll-btn\"\r\n                        disabled={loading}\r\n                      >\r\n                        End Poll\r\n                      </button>\r\n                      <button \r\n                        onClick={() => viewPollResults(poll.id)}\r\n                        className=\"view-results-btn\"\r\n                      >\r\n                        View Results\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </>\r\n          )}\r\n          \r\n          {!loading && activeTab === \"ended\" && (\r\n            <>\r\n              <h3>Recent Ended Polls</h3>\r\n              {endedPolls.length === 0 ? (\r\n                <p>No ended polls found.</p>\r\n              ) : (\r\n                endedPolls.map(poll => (\r\n                  <div key={poll.id} className=\"poll-item\">\r\n                    <div className=\"poll-info\">\r\n                      <h4>{poll.title}</h4>\r\n                      <p>{poll.description}</p>\r\n                      <div className=\"poll-dates\">\r\n                        <span>Start: {new Date(poll.start_date).toLocaleString()}</span>\r\n                        <span>End: {new Date(poll.end_date).toLocaleString()}</span>\r\n                      </div>\r\n                      <div className=\"vote-count\">\r\n                        <span>Total Votes: {poll.vote_count || 0}</span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"poll-actions\">\r\n                      <button \r\n                        onClick={() => viewPollResults(poll.id)}\r\n                        className=\"view-results-btn\"\r\n                      >\r\n                        View Results\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}