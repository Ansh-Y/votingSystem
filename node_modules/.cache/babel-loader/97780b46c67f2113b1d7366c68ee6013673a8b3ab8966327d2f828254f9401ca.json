{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\voting-system\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { pollsAPI } from \"../services/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const [allPolls, setAllPolls] = useState([]);\n  const [pendingPolls, setPendingPolls] = useState([]);\n  const [ongoingPolls, setOngoingPolls] = useState([]);\n  const [endedPolls, setEndedPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"ongoing\");\n\n  // New poll form state\n  const [newPoll, setNewPoll] = useState({\n    title: \"\",\n    description: \"\",\n    question: \"\",\n    options: [\"\", \"\"] // Start with two empty options\n  });\n\n  // Fetch polls on component mount\n  useEffect(() => {\n    fetchAllPolls();\n  }, []);\n\n  // Fetch all polls\n  const fetchAllPolls = async () => {\n    try {\n      setLoading(true);\n      const response = await pollsAPI.getAllPolls();\n      setAllPolls(response.data);\n\n      // Split polls by status\n      setPendingPolls(response.data.filter(poll => poll.status === \"pending\"));\n      setOngoingPolls(response.data.filter(poll => poll.status === \"ongoing\"));\n      setEndedPolls(response.data.filter(poll => poll.status === \"ended\").slice(0, 3));\n    } catch (err) {\n      console.error(\"Error fetching polls:\", err);\n      setError(\"Failed to load polls. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewPoll({\n      ...newPoll,\n      [name]: value\n    });\n  };\n\n  // Handle option changes\n  const handleOptionChange = (index, value) => {\n    const updatedOptions = [...newPoll.options];\n    updatedOptions[index] = value;\n    setNewPoll({\n      ...newPoll,\n      options: updatedOptions\n    });\n  };\n\n  // Add new option field\n  const addOption = () => {\n    setNewPoll({\n      ...newPoll,\n      options: [...newPoll.options, \"\"]\n    });\n  };\n\n  // Remove option field\n  const removeOption = index => {\n    if (newPoll.options.length <= 2) {\n      setError(\"At least two options are required\");\n      return;\n    }\n    const updatedOptions = newPoll.options.filter((_, i) => i !== index);\n    setNewPoll({\n      ...newPoll,\n      options: updatedOptions\n    });\n  };\n\n  // Create new poll\n  const handleCreatePoll = async e => {\n    e.preventDefault();\n\n    // Validate options are not empty\n    const emptyOptions = newPoll.options.some(option => option.trim() === \"\");\n    if (emptyOptions) {\n      setError(\"All options must be filled in\");\n      return;\n    }\n    try {\n      setLoading(true);\n      await pollsAPI.createPoll(newPoll);\n\n      // Reset form and fetch updated polls\n      setNewPoll({\n        title: \"\",\n        description: \"\",\n        question: \"\",\n        options: [\"\", \"\"] // Reset to two empty options\n      });\n      setShowCreateForm(false);\n      fetchAllPolls();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Error creating poll:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Failed to create poll\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // End a poll\n  const handleEndPoll = async pollId => {\n    if (!window.confirm(\"Are you sure you want to end this poll?\")) {\n      return;\n    }\n    try {\n      setLoading(true);\n      await pollsAPI.endPoll(pollId);\n      fetchAllPolls();\n    } catch (err) {\n      console.error(\"Error ending poll:\", err);\n      setError(\"Failed to end poll\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // View poll results\n  const viewPollResults = async pollId => {\n    // This would navigate to a results page\n    console.log(\"View results for poll:\", pollId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", currentUser.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowCreateForm(!showCreateForm);\n          setError(\"\"); // Clear any errors when toggling form\n        },\n        className: \"create-poll-btn\",\n        children: showCreateForm ? \"Cancel\" : \"Create New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), showCreateForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-poll-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreatePoll,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Poll Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            value: newPoll.title,\n            onChange: handleInputChange,\n            required: true,\n            minLength: 5,\n            placeholder: \"Enter poll title (e.g., 'Class President Election')\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            value: newPoll.description,\n            onChange: handleInputChange,\n            required: true,\n            placeholder: \"Provide details about this poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"question\",\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"question\",\n            name: \"question\",\n            value: newPoll.question,\n            onChange: handleInputChange,\n            required: true,\n            placeholder: \"Enter the poll question (e.g., 'Who should be the class president?')\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), newPoll.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: option,\n              onChange: e => handleOptionChange(index, e.target.value),\n              required: true,\n              placeholder: `Option ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => removeOption(index),\n              className: \"remove-option-btn\",\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: addOption,\n            className: \"add-option-btn\",\n            children: \"+ Add Option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          className: \"submit-poll-btn\",\n          children: loading ? \"Creating...\" : \"Create Poll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === \"ongoing\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"ongoing\"),\n          children: \"Ongoing Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === \"ended\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"ended\"),\n          children: \"Ended Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"polls-list\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading polls...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 23\n        }, this), !loading && activeTab === \"ongoing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ongoing Polls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), ongoingPolls.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No ongoing polls found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this) : ongoingPolls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-item ongoing\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poll-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: poll.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"poll-description\",\n                children: poll.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"poll-question\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Question:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 52\n                }, this), \" \", poll.question || \"Who do you vote for?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"poll-dates\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Started: \", new Date(poll.start_date).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-count\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Votes: \", poll.vote_count || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poll-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEndPoll(poll.id),\n                className: \"end-poll-btn\",\n                disabled: loading,\n                children: \"End Poll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => viewPollResults(poll.id),\n                className: \"view-results-btn\",\n                children: \"View Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 21\n            }, this)]\n          }, poll.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true), !loading && activeTab === \"ended\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recently Ended Polls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), endedPolls.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No ended polls found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this) : endedPolls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-item ended\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poll-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: poll.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"poll-description\",\n                children: poll.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"poll-question\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Question:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 52\n                }, this), \" \", poll.question || \"Who do you vote for?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"poll-dates\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Started: \", new Date(poll.start_date).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 25\n                }, this), poll.end_date && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Ended: \", new Date(poll.end_date).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-count\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Total Votes: \", poll.vote_count || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poll-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => viewPollResults(poll.id),\n                className: \"view-results-btn\",\n                children: \"View Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 21\n            }, this)]\n          }, poll.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"xTV1L/XAiyOjULVJjeMQTAZVghI=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","pollsAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","currentUser","logout","allPolls","setAllPolls","pendingPolls","setPendingPolls","ongoingPolls","setOngoingPolls","endedPolls","setEndedPolls","loading","setLoading","error","setError","showCreateForm","setShowCreateForm","activeTab","setActiveTab","newPoll","setNewPoll","title","description","question","options","fetchAllPolls","response","getAllPolls","data","filter","poll","status","slice","err","console","handleInputChange","e","name","value","target","handleOptionChange","index","updatedOptions","addOption","removeOption","length","_","i","handleCreatePoll","preventDefault","emptyOptions","some","option","trim","createPoll","_err$response","_err$response$data","handleEndPoll","pollId","window","confirm","endPoll","viewPollResults","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","onChange","required","minLength","placeholder","map","disabled","Date","start_date","toLocaleString","vote_count","end_date","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/voting-system/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { pollsAPI } from \"../services/api\";\r\n\r\nconst AdminDashboard = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const [allPolls, setAllPolls] = useState([]);\r\n  const [pendingPolls, setPendingPolls] = useState([]);\r\n  const [ongoingPolls, setOngoingPolls] = useState([]);\r\n  const [endedPolls, setEndedPolls] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"ongoing\");\r\n  \r\n  // New poll form state\r\n  const [newPoll, setNewPoll] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    question: \"\",\r\n    options: [\"\", \"\"] // Start with two empty options\r\n  });\r\n\r\n  // Fetch polls on component mount\r\n  useEffect(() => {\r\n    fetchAllPolls();\r\n  }, []);\r\n\r\n  // Fetch all polls\r\n  const fetchAllPolls = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await pollsAPI.getAllPolls();\r\n      setAllPolls(response.data);\r\n      \r\n      // Split polls by status\r\n      setPendingPolls(response.data.filter(poll => poll.status === \"pending\"));\r\n      setOngoingPolls(response.data.filter(poll => poll.status === \"ongoing\"));\r\n      setEndedPolls(response.data.filter(poll => poll.status === \"ended\").slice(0, 3));\r\n    } catch (err) {\r\n      console.error(\"Error fetching polls:\", err);\r\n      setError(\"Failed to load polls. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle form input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewPoll({ ...newPoll, [name]: value });\r\n  };\r\n\r\n  // Handle option changes\r\n  const handleOptionChange = (index, value) => {\r\n    const updatedOptions = [...newPoll.options];\r\n    updatedOptions[index] = value;\r\n    setNewPoll({ ...newPoll, options: updatedOptions });\r\n  };\r\n\r\n  // Add new option field\r\n  const addOption = () => {\r\n    setNewPoll({ ...newPoll, options: [...newPoll.options, \"\"] });\r\n  };\r\n\r\n  // Remove option field\r\n  const removeOption = (index) => {\r\n    if (newPoll.options.length <= 2) {\r\n      setError(\"At least two options are required\");\r\n      return;\r\n    }\r\n    \r\n    const updatedOptions = newPoll.options.filter((_, i) => i !== index);\r\n    setNewPoll({ ...newPoll, options: updatedOptions });\r\n  };\r\n\r\n  // Create new poll\r\n  const handleCreatePoll = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate options are not empty\r\n    const emptyOptions = newPoll.options.some(option => option.trim() === \"\");\r\n    if (emptyOptions) {\r\n      setError(\"All options must be filled in\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      await pollsAPI.createPoll(newPoll);\r\n      \r\n      // Reset form and fetch updated polls\r\n      setNewPoll({\r\n        title: \"\",\r\n        description: \"\",\r\n        question: \"\",\r\n        options: [\"\", \"\"] // Reset to two empty options\r\n      });\r\n      setShowCreateForm(false);\r\n      fetchAllPolls();\r\n    } catch (err) {\r\n      console.error(\"Error creating poll:\", err);\r\n      setError(err.response?.data?.error || \"Failed to create poll\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // End a poll\r\n  const handleEndPoll = async (pollId) => {\r\n    if (!window.confirm(\"Are you sure you want to end this poll?\")) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      await pollsAPI.endPoll(pollId);\r\n      fetchAllPolls();\r\n    } catch (err) {\r\n      console.error(\"Error ending poll:\", err);\r\n      setError(\"Failed to end poll\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // View poll results\r\n  const viewPollResults = async (pollId) => {\r\n    // This would navigate to a results page\r\n    console.log(\"View results for poll:\", pollId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <h2>Admin Dashboard</h2>\r\n        <div className=\"user-info\">\r\n          <span>Welcome, {currentUser.name}</span>\r\n          <button onClick={logout} className=\"logout-btn\">Logout</button>\r\n        </div>\r\n      </header>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      <div className=\"dashboard-actions\">\r\n        <button \r\n          onClick={() => {\r\n            setShowCreateForm(!showCreateForm);\r\n            setError(\"\"); // Clear any errors when toggling form\r\n          }}\r\n          className=\"create-poll-btn\"\r\n        >\r\n          {showCreateForm ? \"Cancel\" : \"Create New Poll\"}\r\n        </button>\r\n      </div>\r\n\r\n      {showCreateForm && (\r\n        <div className=\"create-poll-form\">\r\n          <h3>Create New Poll</h3>\r\n          <form onSubmit={handleCreatePoll}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Poll Title</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={newPoll.title}\r\n                onChange={handleInputChange}\r\n                required\r\n                minLength={5}\r\n                placeholder=\"Enter poll title (e.g., 'Class President Election')\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={newPoll.description}\r\n                onChange={handleInputChange}\r\n                required\r\n                placeholder=\"Provide details about this poll\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"question\">Question</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"question\"\r\n                name=\"question\"\r\n                value={newPoll.question}\r\n                onChange={handleInputChange}\r\n                required\r\n                placeholder=\"Enter the poll question (e.g., 'Who should be the class president?')\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Options</label>\r\n              {newPoll.options.map((option, index) => (\r\n                <div key={index} className=\"option-input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={option}\r\n                    onChange={(e) => handleOptionChange(index, e.target.value)}\r\n                    required\r\n                    placeholder={`Option ${index + 1}`}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => removeOption(index)}\r\n                    className=\"remove-option-btn\"\r\n                  >\r\n                    ✕\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              <button\r\n                type=\"button\"\r\n                onClick={addOption}\r\n                className=\"add-option-btn\"\r\n              >\r\n                + Add Option\r\n              </button>\r\n            </div>\r\n\r\n            <button type=\"submit\" disabled={loading} className=\"submit-poll-btn\">\r\n              {loading ? \"Creating...\" : \"Create Poll\"}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"polls-tabs\">\r\n        <div className=\"tabs-header\">\r\n          <button \r\n            className={activeTab === \"ongoing\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"ongoing\")}\r\n          >\r\n            Ongoing Polls\r\n          </button>\r\n          <button \r\n            className={activeTab === \"ended\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"ended\")}\r\n          >\r\n            Ended Polls\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"polls-list\">\r\n          {loading && <p>Loading polls...</p>}\r\n          \r\n          {!loading && activeTab === \"ongoing\" && (\r\n            <>\r\n              <h3>Ongoing Polls</h3>\r\n              {ongoingPolls.length === 0 ? (\r\n                <p>No ongoing polls found.</p>\r\n              ) : (\r\n                ongoingPolls.map(poll => (\r\n                  <div key={poll.id} className=\"poll-item ongoing\">\r\n                    <div className=\"poll-info\">\r\n                      <h4>{poll.title}</h4>\r\n                      <p className=\"poll-description\">{poll.description}</p>\r\n                      <p className=\"poll-question\"><strong>Question:</strong> {poll.question || \"Who do you vote for?\"}</p>\r\n                      <div className=\"poll-dates\">\r\n                        <span>Started: {new Date(poll.start_date).toLocaleString()}</span>\r\n                      </div>\r\n                      <div className=\"vote-count\">\r\n                        <span>Votes: {poll.vote_count || 0}</span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"poll-actions\">\r\n                      <button \r\n                        onClick={() => handleEndPoll(poll.id)}\r\n                        className=\"end-poll-btn\"\r\n                        disabled={loading}\r\n                      >\r\n                        End Poll\r\n                      </button>\r\n                      <button \r\n                        onClick={() => viewPollResults(poll.id)}\r\n                        className=\"view-results-btn\"\r\n                      >\r\n                        View Results\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </>\r\n          )}\r\n          \r\n          {!loading && activeTab === \"ended\" && (\r\n            <>\r\n              <h3>Recently Ended Polls</h3>\r\n              {endedPolls.length === 0 ? (\r\n                <p>No ended polls found.</p>\r\n              ) : (\r\n                endedPolls.map(poll => (\r\n                  <div key={poll.id} className=\"poll-item ended\">\r\n                    <div className=\"poll-info\">\r\n                      <h4>{poll.title}</h4>\r\n                      <p className=\"poll-description\">{poll.description}</p>\r\n                      <p className=\"poll-question\"><strong>Question:</strong> {poll.question || \"Who do you vote for?\"}</p>\r\n                      <div className=\"poll-dates\">\r\n                        <span>Started: {new Date(poll.start_date).toLocaleString()}</span>\r\n                        {poll.end_date && (\r\n                          <span>Ended: {new Date(poll.end_date).toLocaleString()}</span>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"vote-count\">\r\n                        <span>Total Votes: {poll.vote_count || 0}</span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"poll-actions\">\r\n                      <button \r\n                        onClick={() => viewPollResults(poll.id)}\r\n                        className=\"view-results-btn\"\r\n                      >\r\n                        View Results\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}